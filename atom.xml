<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Cpl.Kerry</title>
  
  
  <link href="https://rickg.cn/atom.xml" rel="self"/>
  
  <link href="https://rickg.cn/"/>
  <updated>2023-07-20T06:07:45.806Z</updated>
  <id>https://rickg.cn/</id>
  
  <author>
    <name>Rick</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Proxmox VE 云桌面实战 ② - Windows篇</title>
    <link href="https://rickg.cn/2023/07/18/pve-cloud-desktop-hands-on-2/"/>
    <id>https://rickg.cn/2023/07/18/pve-cloud-desktop-hands-on-2/</id>
    <published>2023-07-18T04:33:39.000Z</published>
    <updated>2023-07-20T06:07:45.806Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>上文笔者配置好了vGPU相关，那么本文笔者将创建一个简单的Windows云桌面。</p><h2 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h2><p>对于云桌面，不谈那些高大上的企业级方案，毕竟搞到了也没有授权（</p><p>既然说“简单”，那来讲讲以下几个简单的方案吧：</p><ul><li>SPICE</li><li>VNC</li><li>Parsec</li><li>Moonlight + Sunshine</li></ul><h3 id="SPICE"><a href="#SPICE" class="headerlink" title="SPICE"></a>SPICE</h3><p>可以说是最快捷的方案了，直接被Proxmox VE所集成，甚至VM在安装QXL驱动之后还能拥有简单的3D功能（前提要Windows 8.1以上</p><p>缺点也很明显，<strong>有点卡</strong>，只支持Windows、Linux、Mac（Mac甚至要自己编译</p><p>QXL羸弱的图形性能，跑3D应用是别想了</p><p>PVE里面有个SPICE增强，里面可以开启<strong>Video Streaming</strong>，个人认为也就是所谓的串流，但感觉开启了也没什么效果。</p><p>不过对于轻度使用和没有vGPU的情况，SPICE倒是不错的方案（毕竟不需要在VM上装VNC Server什么的，并且支持剪贴板共享</p><h3 id="VNC"><a href="#VNC" class="headerlink" title="VNC"></a>VNC</h3><p>VNC（Virtual Network Computing）是一种图形桌面共享系统，使用RFB（远程帧缓冲）协议来提供远程控制功能。在云桌面应用中，VNC可以用来实现对远程虚拟机的访问和管理。</p><p>VNC的优点在于跨平台，其客户端非常之多，安全性也较高，同时也支持剪贴板共享</p><p>缺点在于，貌似也不支持GPU加速（如有知道的大佬请在评论区指正</p><h3 id="串流"><a href="#串流" class="headerlink" title="串流"></a>串流</h3><p>最棒的方案，但是对于网络和硬件要求也最苛刻</p><p>你需要有一块支持编解码的GPU，以及较高的网络上行带宽</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://www.bilibili.com/read/cv11681088" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon"><div class="left"><span class="title">https://www.bilibili.com/read/cv11681088</span><span class="cap link fs12">https://www.bilibili.com/read/cv11681088</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.4/link/8f277b4ee0ecd.svg"></div></div></a></div><p>这里介绍两种：Parsec、Moonlight</p><p>Parsec是付费软件，但有免费版本，只不过少了无头显示，4:4:4颜色模式等功能。</p><p>Moonlight则完全免费、开源，配合Sunshine使用可以实现4K HDR云游戏（如果条件符合的话）</p><p>对于网络，Parsec支持P2P连接 &amp; IPv6，而Moonlight + Sunshine需要手动配置端口转发（<a href="https://github.com/LizardByte/Sunshine/discussions/390">不支持IPv6</a>）</p><h2 id="虚拟机配置"><a href="#虚拟机配置" class="headerlink" title="虚拟机配置"></a>虚拟机配置</h2><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-07-19%2008.58.23.png" alt="截屏2023-07-19 08.58.23" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-07-19 08.58.23</span></div></div><p>包含一块NVIDIA vGPU，mDev类型为nvidia-52，对于vGPU类型，见上一篇文章</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-07-19%2008.52.34.png" alt="截屏2023-07-19 08.52.34" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-07-19 08.52.34</span></div></div><h2 id="配置SPICE"><a href="#配置SPICE" class="headerlink" title="配置SPICE"></a>配置SPICE</h2><p>SPICE基本不需要配置，只需要安装spice-guest-tools即可</p><p>下载spice-guest-tools</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://www.spice-space.org/download/windows/spice-guest-tools/spice-guest-tools-latest.exe" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon"><div class="left"><span class="title">https://www.spice-space.org/download/windows/spice-guest-tools/spice-guest-tools-latest.exe</span><span class="cap link fs12">https://www.spice-space.org/download/windows/spice-guest-tools/spice-guest-tools-latest.exe</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.4/link/8f277b4ee0ecd.svg"></div></div></a></div><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-07-19%2009.06.04.png" alt="截屏2023-07-19 09.06.04" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-07-19 09.06.04</span></div></div><p>同意许可协议</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-07-19%2009.06.38.png" alt="截屏2023-07-19 09.06.38" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-07-19 09.06.38</span></div></div><p>同意安装驱动</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-07-19%2009.07.27.png" alt="截屏2023-07-19 09.07.27" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-07-19 09.07.27</span></div></div><p>安装完成</p><p>登录Proxmox VE，点击VM，点击控制台，下载<code>pve-spice.vv</code>文件</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-07-19%2009.10.43.png" alt="截屏2023-07-19 09.10.43" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-07-19 09.10.43</span></div></div><p>下载virt-viewer并安装</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://releases.pagure.org/virt-viewer/virt-viewer-x64-11.0-1.0.msi" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon"><div class="left"><span class="title">https://releases.pagure.org/virt-viewer/virt-viewer-x64-11.0-1.0.msi</span><span class="cap link fs12">https://releases.pagure.org/virt-viewer/virt-viewer-x64-11.0-1.0.msi</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.4/link/8f277b4ee0ecd.svg"></div></div></a></div><p>对于Linux，执行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Fedora</span></span><br><span class="line">sudo dnf install virt-manager</span><br><span class="line"><span class="comment"># Ubuntu &amp; Debian</span></span><br><span class="line">sudo apt install virt-manager</span><br></pre></td></tr></table></figure><p>打开pve-spice.vv，可以看到VM画面并控制VM</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-07-19%2009.18.18.png" alt="截屏2023-07-19 09.18.18" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-07-19 09.18.18</span></div></div><h2 id="配置VNC"><a href="#配置VNC" class="headerlink" title="配置VNC"></a>配置VNC</h2><p>下载任意VNC Server软件，这里我使用TightVNC</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://www.tightvnc.com/download.php" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon"><div class="left"><span class="title">https://www.tightvnc.com/download.php</span><span class="cap link fs12">https://www.tightvnc.com/download.php</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.4/link/8f277b4ee0ecd.svg"></div></div></a></div><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-07-19%2009.23.28.png" alt="截屏2023-07-19 09.23.28" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-07-19 09.23.28</span></div></div><p>同意许可协议</p><p>安装方式选择“Custom”，勾选TightVNC Server</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-07-19%2009.24.10.png" alt="截屏2023-07-19 09.24.10" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-07-19 09.24.10</span></div></div><p>将TightVNC Server注册为系统服务</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-07-19%2009.24.54.png" alt="截屏2023-07-19 09.24.54" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-07-19 09.24.54</span></div></div><p>安装完成后，会提示是否设置VNC密码，这里设置一个</p><p>打开VNC Viewer，这里我使用的是RealVNC Viewer</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://www.realvnc.com/en/connect/download/viewer/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon"><div class="left"><span class="title">https://www.realvnc.com/en/connect/download/viewer/</span><span class="cap link fs12">https://www.realvnc.com/en/connect/download/viewer/</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.4/link/8f277b4ee0ecd.svg"></div></div></a></div><p>输入VM的IP，回车连接</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-07-19%2009.40.19.png" alt="截屏2023-07-19 09.40.19" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-07-19 09.40.19</span></div></div><p>提示连接未加密，点击“Continue”继续</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-07-19%2009.40.48.png" alt="截屏2023-07-19 09.40.48" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-07-19 09.40.48</span></div></div><p>输入密码，点击OK连接</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-07-19%2009.42.44.png" alt="截屏2023-07-19 09.42.44" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-07-19 09.42.44</span></div></div><p>由于VNC服务器的限制，会话没有声音，如果有需求，建议使用RealVNC Server或者SPICE。</p><h2 id="配置Parsec"><a href="#配置Parsec" class="headerlink" title="配置Parsec"></a>配置Parsec</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>前往Parsec官网下载Parsec</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://parsec.app/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon"><div class="left"><span class="title">https://parsec.app/</span><span class="cap link fs12">https://parsec.app/</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.4/link/8f277b4ee0ecd.svg"></div></div></a></div><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-07-20%2008.56.04.png" alt="截屏2023-07-20 08.56.04" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-07-20 08.56.04</span></div></div><table><thead><tr><th>平台</th><th>作为主机</th><th>作为客户端</th></tr></thead><tbody><tr><td>Windows</td><td>✅</td><td>✅</td></tr><tr><td>Linux</td><td></td><td>✅</td></tr><tr><td>Mac</td><td>✅</td><td>✅</td></tr><tr><td>Android</td><td></td><td>✅</td></tr></tbody></table><p>安装时务必选择Shared方式安装，这样Parsec会以系统用户权限运行，开机时就自动服务，可以显示登录画面而后手动登录。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-07-20%2009.05.50.png" alt="截屏2023-07-20 09.05.50" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-07-20 09.05.50</span></div></div><p>安装完成后弹出登录界面</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-07-20%2009.07.30.png" alt="截屏2023-07-20 09.07.30" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-07-20 09.07.30</span></div></div><p>Parsec需要联网登录使用，如果是内网环境是使用不了Parsec的</p><p>没有账户的，直接点击Sign up注册即可</p><h3 id="系统要求"><a href="#系统要求" class="headerlink" title="系统要求"></a>系统要求</h3><h4 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h4><p>没有硬性要求硬件解码，但若要有良好体验，则Intel QSV &#x2F; AMD AMF &#x2F; NVENC是必须的</p><p>对于网络，有IPv6为最好</p><h4 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h4><p>服务端要求较为严苛，硬件编解码为必须（即类似NVENC &#x2F; NVDEC），若没有则会在连接时提示主机不支持硬件编解码</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-07-20%2009.14.17.png" alt="截屏2023-07-20 09.14.17" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-07-20 09.14.17</span></div></div><p>对于网络，有IPv6为最好，在无IPv6情况下，全锥NAT &gt; 限制NAT &gt; 对称NAT</p><p>对称型NAT可能导致无法连接</p><p>具体可以参见<a href="https://foxi.buduanwang.vip/virtualization/1736.html/">佛西大佬的教程</a></p><h3 id="配置vGPU授权"><a href="#配置vGPU授权" class="headerlink" title="配置vGPU授权"></a>配置vGPU授权</h3><p>由于目前vGPU没有授权，所以是不能编解码的，这是就要用上之前配置好的fastapi-dls项目了</p><p>打开<code>https://&lt;fastapi-dis-ip&gt;/</code>，可以看到fastapi-dls的介绍页面</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-07-20%2009.23.04.png" alt="截屏2023-07-20 09.23.04" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-07-20 09.23.04</span></div></div><p>往下翻，找到这一部分，这就是官方的配置教程：</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets@master/img/%E6%88%AA%E5%B1%8F2023-07-20%2009.24.00.png" alt="截屏2023-07-20 09.24.00" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-07-20 09.24.00</span></div></div><p>下载<code>https://&lt;fastapi-dls-ip&gt;/client-token</code>，保存到<code>C:\Program Files\NVIDIA Corporation\vGPU Licensing\ClientConfigToken</code>目录，而后重启VM或重启<code>NVContainerLocalSystem</code>服务，可以看到获得了vGPU授权：</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-07-20%2009.30.29.png" alt="截屏2023-07-20 09.30.29" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-07-20 09.30.29</span></div></div><h3 id="参数配置"><a href="#参数配置" class="headerlink" title="参数配置"></a>参数配置</h3><h4 id="服务端-1"><a href="#服务端-1" class="headerlink" title="服务端"></a>服务端</h4><table><thead><tr><th>参数</th><th>解释</th></tr></thead><tbody><tr><td>Hosting Enabled</td><td>是否运行为服务端</td></tr><tr><td>Host Name</td><td>主机名，请通过Windows设置修改</td></tr><tr><td>Resolution</td><td>分辨率</td></tr><tr><td>Bandwidth</td><td>码率限制</td></tr><tr><td>FPS</td><td>帧率，一般选60</td></tr><tr><td>Exclusive Input Mode</td><td>鼠标独占模式</td></tr><tr><td>Display</td><td>使用的显示器，免费版只能选一个</td></tr><tr><td>Audio</td><td>使用的声卡</td></tr><tr><td>Echo cancelling</td><td>回声消除</td></tr><tr><td>Virtual Gamepad Type</td><td>虚拟手柄类型，有Xbox 360、PS4、PS5三种</td></tr><tr><td>Quality</td><td>质量，有低延迟、平衡、高质量三种</td></tr><tr><td>Idle Kick Timer</td><td>挂机自动踢出</td></tr></tbody></table><h4 id="客户端-1"><a href="#客户端-1" class="headerlink" title="客户端"></a>客户端</h4><p>配置的项目不多，连上服务端后，有以下几个选项</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-07-20%2009.38.21.png" alt="截屏2023-07-20 09.38.21" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-07-20 09.38.21</span></div></div><table><thead><tr><th>参数</th><th>解释</th></tr></thead><tbody><tr><td>Hide Button</td><td>隐藏Parsec按钮</td></tr><tr><td>Chat</td><td>聊天，用于多人控制一台服务端时</td></tr><tr><td>Windowed</td><td>窗口模式</td></tr><tr><td>Sound On</td><td>打开声音</td></tr><tr><td>Codec</td><td>编码器</td></tr><tr><td>Decoder</td><td>解码器</td></tr><tr><td>Prefer 4:4:4 Color</td><td>优先4:4:4（需要付费）</td></tr><tr><td>Resolution</td><td>分辨率</td></tr><tr><td>Bandwidth Limit</td><td>码率限制</td></tr><tr><td>Constant FPS</td><td>恒定FPS</td></tr><tr><td>Send CTRL+ALT+DEL</td><td>发送CTRL+ALT+DEL</td></tr></tbody></table><h3 id="800错误解决办法"><a href="#800错误解决办法" class="headerlink" title="-800错误解决办法"></a>-800错误解决办法</h3><p>有时打开Parsec会提示-800错误，无法连接到服务器，此情况一般是登录服务器被运营商屏蔽或是受到其他影响，需要为Parsec配置代理。</p><p>打开Parsec，点击Settings，一直往底下拉，找到<code>edit the configuration file directly</code></p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-07-20%2009.48.34.png" alt="截屏2023-07-20 09.48.34" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-07-20 09.48.34</span></div></div><p>随后打开配置文件，在配置文件中加入以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app_proxy_address = 127.0.0.1</span><br><span class="line">app_proxy_scheme = http</span><br><span class="line">app_proxy = true</span><br><span class="line">app_proxy_port = 7890</span><br></pre></td></tr></table></figure><p>其中7890（端口）和http（代理类型）根据你本地运行的代理软件而定。</p><h2 id="配置Sunshine"><a href="#配置Sunshine" class="headerlink" title="配置Sunshine"></a>配置Sunshine</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>Sunshine是一个为Moonlight设计的云游戏服务端，它提供低延迟的云游戏能力，支持用AMD、Intel和Nvidia的GPU进行硬件编码，同时也支持软件编码。您可以从任何设备的Moonlight客户端连接到Sunshine，Sunshine提供了一个网页用户界面，用户可以从浏览器进行配置和客户端配对。可以从本地服务器或任何移动设备进行配对。</p><h3 id="官方配置要求"><a href="#官方配置要求" class="headerlink" title="官方配置要求"></a>官方配置要求</h3><div class="tag-plugin note" color="green"><div class="title">官方提示</div><div class="body"><p>该配置要求仅供参考，请勿按照此表格购买相关硬件</p></div></div><h4 id="最低配置"><a href="#最低配置" class="headerlink" title="最低配置"></a>最低配置</h4><table><thead><tr><th>类型</th><th>要求</th></tr></thead><tbody><tr><td>GPU</td><td>AMD：VCE 1.0或更高，参见<a href="https://github.com/obsproject/obs-amd-encoder/wiki/Hardware-Support">obs-amd hardware support</a></td></tr><tr><td></td><td>Intel：兼容,VA-API，参见<a href="https://www.intel.com/content/www/us/en/developer/articles/technical/linuxmedia-vaapi.html">VAAPI hardware support</a></td></tr><tr><td></td><td>Nvidia：支持NVENC的GPU，参见<a href="https://developer.nvidia.com/video-encode-and-decode-gpu-support-matrix-new">nvenc support matrix</a></td></tr><tr><td>CPU</td><td>AMD: Ryzen 3 或更高</td></tr><tr><td></td><td>Intel: Core i3 或更高</td></tr><tr><td>RAM</td><td>4GB +</td></tr><tr><td>OS</td><td>Windows: 10 +（不支持Windows Server）</td></tr><tr><td></td><td>macOS: 11.7 +</td></tr><tr><td></td><td>Linux&#x2F;Debian: 11 (bullseye)</td></tr><tr><td></td><td>Linux&#x2F;Fedora: 36 +</td></tr><tr><td></td><td>Linux&#x2F;Ubuntu: 20.04 + (focal)</td></tr><tr><td>网络</td><td>服务端：5GHz, 802.11ac</td></tr><tr><td></td><td>客户端：5GHz, 802.11ac</td></tr></tbody></table><h4 id="4K推荐配置"><a href="#4K推荐配置" class="headerlink" title="4K推荐配置"></a>4K推荐配置</h4><table><thead><tr><th>类型</th><th>要求</th></tr></thead><tbody><tr><td>GPU</td><td>AMD: Video Coding Engine 3.1 +</td></tr><tr><td></td><td>Intel: HD Graphics 510 +</td></tr><tr><td></td><td>Nvidia: GeForce GTX 1080 +</td></tr><tr><td>CPU</td><td>AMD: Ryzen 5 +</td></tr><tr><td></td><td>Intel: Core i5 +</td></tr><tr><td>网络</td><td>Host: CAT5e ethernet or better</td></tr><tr><td></td><td>Client: CAT5e ethernet or better</td></tr></tbody></table><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><p>前往Sunshine的Release页面下载</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://github.com/LizardByte/Sunshine/releases" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon"><div class="left"><span class="title">https://github.com/LizardByte/Sunshine/releases</span><span class="cap link fs12">https://github.com/LizardByte/Sunshine/releases</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.4/link/8f277b4ee0ecd.svg"></div></div></a></div><p>Windows平台下载<code>sunshine-windows-installer.exe</code>即可</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-07-20%2012.44.14.png" alt="截屏2023-07-20 12.44.14" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-07-20 12.44.14</span></div></div><p>选择组件时，注意勾选<code>Launch on Startup</code>（开机自启动）和<code>Add Firewall Exclude</code>（添加防火墙例外）</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>安装完成后，访问<code>https://localhost:47990/</code>进入Sunchine配置界面，首次配置需要设置用户名和密码</p><p>首先打开Troubleshooting，在Logs处往下拉，若找到<code>Found encoder nvenc: [h264_nvenc, hevc_nvenc]</code>，则表明GPU编码工作正常，否则将使用软件编码</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-07-20%2013.23.09.png" alt="截屏2023-07-20 13.23.09" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-07-20 13.23.09</span></div></div><h4 id="General页"><a href="#General页" class="headerlink" title="General页"></a>General页</h4><p>该页面主要配置一些通用选项</p><table><thead><tr><th>名称</th><th>解释</th></tr></thead><tbody><tr><td>Sunshine Name</td><td>主机名，显示在Moonlight连接页面中，若不填为计算机名</td></tr><tr><td>Log Level</td><td>日志等级，默认为Info</td></tr><tr><td>Logfile Path</td><td>日志文件目录，默认为sunshine.log</td></tr><tr><td>Origin Web UI Allowed</td><td>允许哪些网络上的计算机访问WebUI，默认为局域网</td></tr><tr><td>UPnP</td><td>通用即插即用（端口转发），默认为关</td></tr><tr><td>Gamepads</td><td>虚拟游戏手柄，有Xbox 360和PS4，默认为Xbox 360</td></tr><tr><td>Ping Timeout</td><td>Ping 超时，超出此时间则断开连接</td></tr><tr><td>Advertised Resolutions and FPS</td><td>Sunshine向客户端发送的建议的分辨率，一些客户端（如Switch客户端）需要此分辨率来确定请求的分辨率是否被支持。不影响实际推流的分辨率。</td></tr><tr><td>Map Right Alt key to Windows key</td><td>将右Alt键映射到Win键，当按Win键没反应时可以使用</td></tr><tr><td>Command Preparations</td><td>配置一个命令列表，这些命令将在运行任何应用程序之前或之后执行。如果任何指定的预备命令失败，应用程序的启动过程将被终止。</td></tr></tbody></table><h4 id="Files页"><a href="#Files页" class="headerlink" title="Files页"></a>Files页</h4><p>该页面主要配置HTTPS证书和配置文件的目录</p><table><thead><tr><th>名称</th><th>解释</th></tr></thead><tbody><tr><td>Private Key</td><td>HTTPS私钥，必须为2048 bits</td></tr><tr><td>Cert</td><td>HTTPS证书，必须签名为一个2048 bits密钥</td></tr><tr><td>State File</td><td>存储Sunshine当前状态的文件</td></tr><tr><td>Apps File</td><td>存储Sunshine Apps的文件</td></tr></tbody></table><h4 id="Input页"><a href="#Input页" class="headerlink" title="Input页"></a>Input页</h4><p>该页面主要配置输入相关</p><table><thead><tr><th>名称</th><th>解释</th></tr></thead><tbody><tr><td>Home&#x2F;Guide Button Emulation Timeout</td><td>游戏手柄Home键模拟超时。如果按住Back&#x2F;Select按钮的时间达到指定的毫秒数，将会模拟按下Home&#x2F;Guide按钮。如果设置为小于0的值（默认情况下），按住返回&#x2F;选择按钮不会模拟按下Home&#x2F;Guide按钮。</td></tr><tr><td>Enable Mouse Input</td><td>启用鼠标输入</td></tr><tr><td>Enable Keyboard Input</td><td>启用键盘输入</td></tr><tr><td>Enable Gamepad Input</td><td>启用手柄输入</td></tr><tr><td>Key Repeat Delay</td><td>按键重复延迟，单位毫秒</td></tr><tr><td>Key Repeat Frequency</td><td>按键重复频率，即每秒一个键最多按几次</td></tr></tbody></table><h4 id="Audio-x2F-Video页"><a href="#Audio-x2F-Video页" class="headerlink" title="Audio &#x2F; Video页"></a>Audio &#x2F; Video页</h4><p>该页主要配置音视频相关</p><table><thead><tr><th>名称</th><th>解释</th></tr></thead><tbody><tr><td>Audio Sink</td><td>音频源，建议留空以便自动检测。运行安装目录下的<code>tools\audio-info.exe</code>获取声卡名称。</td></tr><tr><td>Virtual Sink</td><td>虚拟音频源，建议留空以便自动检测</td></tr><tr><td>Install Steam Audio Drivers</td><td>安装Steam音频驱动，如果Steam在服务器上安装，这会自动安装驱动以支持5.1&#x2F;7.1环绕声并将原有声卡静音</td></tr><tr><td>Adapter Name</td><td>用于捕获的显卡名称，建议留空以便自动检测，该显卡必须连接到显示器且通电。运行安装目录下的<code>tools\dxgi-info.exe</code>获取显卡名称</td></tr><tr><td>Output Name</td><td>连接到该显卡的显示器名称，若留空则使用主显示器，一般配合<code>Adapter Name</code>使用</td></tr><tr><td>DwmFlush</td><td>提升鼠标移动时的捕获平滑度。若遇到和垂直同步相关问题请禁用</td></tr></tbody></table><h4 id="Advanced页"><a href="#Advanced页" class="headerlink" title="Advanced页"></a>Advanced页</h4><p>该页主要配置高级选项</p><table><thead><tr><th>名称</th><th>解释</th></tr></thead><tbody><tr><td>Port</td><td>Sunshine服务使用的端口，留空为47989。关于端口转发相关请往下看</td></tr><tr><td>Quantization Parameter</td><td>量化参数，在不支持CBR（恒定比特率）的设备上使用，更高表示更大的压缩、更差的质量</td></tr><tr><td>Minimum Software Encoding Thread Count</td><td>最小软件编码线程数。稍微增加该值会降低编码效率，但通常为了能够使用更多的CPU核心进行编码，这种权衡是值得的。理想的值是能在您的硬件上可靠地按照您期望的流媒体设置进行编码的最低值。</td></tr><tr><td>HEVC Support</td><td>HEVC支持。对于软件编码服务端请谨慎考虑。</td></tr><tr><td>Force a Specific Encoder</td><td>强制指定编码器，不建议使用</td></tr><tr><td>FEC Percentage</td><td>每个视频帧中每个数据包的纠错包的百分比。更高的值可以纠正更多的丢包，但代价是增加带宽使用。默认值20是GeForce Experience所使用的值。</td></tr><tr><td>Channels</td><td>频道，一般用于以下场景：1.多个客户端分别从LAN和WAN连接，需要不同的码率。2.解码器需要不同的颜色配置。</td></tr><tr><td>Web Manager Credentials File</td><td>Web UI凭据文件，保存用户名和密码（</td></tr><tr><td>Origin PIN Allowed</td><td>要求PIN配对的来源，默认为localhost不需要PIN配对</td></tr><tr><td>External IP</td><td>监听的外部IP，留空为自动检测</td></tr></tbody></table><h3 id="连接到Sunshine"><a href="#连接到Sunshine" class="headerlink" title="连接到Sunshine"></a>连接到Sunshine</h3><p>前往Moonlight Github Release页面下载Moonlight客户端</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://github.com/moonlight-stream/moonlight-qt/releases" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon"><div class="left"><span class="title">https://github.com/moonlight-stream/moonlight-qt/releases</span><span class="cap link fs12">https://github.com/moonlight-stream/moonlight-qt/releases</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.4/link/8f277b4ee0ecd.svg"></div></div></a></div><p>安装完成后打开，点击右上角的手动添加计算机，输入IP</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-07-20%2013.59.16.png" alt="截屏2023-07-20 13.59.16" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-07-20 13.59.16</span></div></div><p>添加后出现计算机，但是现在有锁，需要进行PIN验证，点击计算机图标，弹出对话框</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-07-20%2014.01.15.png" alt="截屏2023-07-20 14.01.15" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-07-20 14.01.15</span></div></div><p>随后在Sunshine控制面板的PIN页面中输入PIN，建立连接</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-07-20%2014.04.02.png" alt="截屏2023-07-20 14.04.02" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-07-20 14.04.02</span></div></div><p>点击Desktop，稍等片刻，云桌面就出现在我们眼前了。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-07-20%2014.06.28.png" alt="截屏2023-07-20 14.06.28" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-07-20 14.06.28</span></div></div><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://pve.proxmox.com/wiki/SPICE">SPICE - Proxmox VE</a></p><p><a href="https://www.spice-space.org/">Home (spice-space.org)</a></p><p><a href="https://en.wikipedia.org/wiki/Virtual_Network_Computing">Virtual Network Computing - Wikipedia</a></p><p><a href="https://moonlight-stream.org/">Moonlight Game Streaming: Play Your PC Games Remotely (moonlight-stream.org)</a></p><p><a href="https://github.com/LizardByte/Sunshine/">LizardByte&#x2F;Sunshine: Self-hosted game stream host for Moonlight. (github.com)</a></p><p><a href="https://parsec.app/">Connect to Work or Games from Anywhere | Parsec</a></p><p><a href="https://foxi.buduanwang.vip/virtualization/1736.html/">佛西博客 - 人人走向云游戏——Parsec详解 (buduanwang.vip)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;上文笔者配置好了vGPU相关，那么本文笔者将创建一个简单的Windows云桌面。&lt;/p&gt;
&lt;h2 id=&quot;方案&quot;&gt;&lt;a href=&quot;#方案&quot;</summary>
      
    
    
    
    
    <category term="云桌面" scheme="https://rickg.cn/tags/%E4%BA%91%E6%A1%8C%E9%9D%A2/"/>
    
    <category term="PVE" scheme="https://rickg.cn/tags/PVE/"/>
    
    <category term="Windows" scheme="https://rickg.cn/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Proxmox VE 云桌面实战 ① - 配置NVIDIA vGPU</title>
    <link href="https://rickg.cn/2023/07/17/pve-cloud-desktop-hands-on-1/"/>
    <id>https://rickg.cn/2023/07/17/pve-cloud-desktop-hands-on-1/</id>
    <published>2023-07-17T13:28:54.000Z</published>
    <updated>2023-07-20T05:09:40.430Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>随着互联网设施的建设和云计算的发展，“云桌面”、“云游戏”等概念已逐渐走入人们的视线。无论如何，它都改变了我们理解硬件性能和游戏体验的方式。本系列文章将介绍如何使用Proxmox VE构建一个简单的，支持Windows、Linux的云桌面系统。</p><h2 id="认识vGPU"><a href="#认识vGPU" class="headerlink" title="认识vGPU"></a>认识vGPU</h2><p>要为VM添加图形功能，一般有三种方法：</p><ul><li>软件模拟（如“标准VGA”，“VMware SVGA II”）</li><li>PCI Passthrough</li><li>vGPU（mDev &#x2F; sr-IOV）</li></ul><p>性能为 PCI Passthrough &gt; vGPU &gt; 软件模拟</p><p>对于vGPU，市面上有三种方案：</p><table><thead><tr><th>Intel</th><th>AMD</th><th>NVIDIA</th></tr></thead><tbody><tr><td>GVT-g</td><td>MxGPU</td><td>NVIDIA vGPU</td></tr></tbody></table><p>笔者采用的是NVIDIA Tesla P40这款GPU，故本文只介绍NVIDIA vGPU。</p><h3 id="vGPU架构"><a href="#vGPU架构" class="headerlink" title="vGPU架构"></a>vGPU架构</h3><div class="tag-plugin image"><div class="image-bg"><img src="https://docs.nvidia.com/grid/13.0/common/graphics/architecture-grid-vgpu-overview.png" fancybox="true"/></div></div><p>从上图可以看出，NVIDIA vGPU的实现由软硬件协同而成，硬件上有GPU，软件上有NVIDIA vGPU Manager。</p><h3 id="vGPU支持的显卡"><a href="#vGPU支持的显卡" class="headerlink" title="vGPU支持的显卡"></a>vGPU支持的显卡</h3><p>一般情况下，vGPU只支持数据中心级的Tesla GPU和部分Quadro GPU，大致如下：</p><table><thead><tr><th>架构</th><th>型号</th></tr></thead><tbody><tr><td>Maxwell</td><td>M6, M10, M60</td></tr><tr><td>Pascal</td><td>P4, P6, P40, P100, P100 12GB</td></tr><tr><td>Volta</td><td>V100</td></tr><tr><td>Turing</td><td>T4, RTX 6000, RTX 6000 passive, RTX 8000, RTX 8000 passive</td></tr><tr><td>Ampere</td><td>A2, A10, A16, A40, RTX A5000, RTX A5500, RTX A6000</td></tr><tr><td>Ada</td><td>L4, L40, RTX 6000 Ada</td></tr></tbody></table><p>不过有热心大神开发了解锁补丁，可以在9，10，20系显卡上解锁vGPU功能，具体链接及教程如下：</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://github.com/mbilker/vgpu_unlock-rs" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon"><div class="left"><span class="title">https://github.com/mbilker/vgpu_unlock-rs</span><span class="cap link fs12">https://github.com/mbilker/vgpu_unlock-rs</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.4/link/8f277b4ee0ecd.svg"></div></div></a></div><div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://gitlab.com/polloloco/vgpu-proxmox" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon"><div class="left"><span class="title">https://gitlab.com/polloloco/vgpu-proxmox</span><span class="cap link fs12">https://gitlab.com/polloloco/vgpu-proxmox</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.4/link/8f277b4ee0ecd.svg"></div></div></a></div><h3 id="支持的平台"><a href="#支持的平台" class="headerlink" title="支持的平台"></a>支持的平台</h3><p>根据官方文档，目前支持的平台如下：</p><ul><li>Citrix XenServer</li><li>Linux with KVM（比如Proxmox VE）</li><li>Microsoft Azure Stack HCI</li><li>Microsoft Windows Server（即Hyper-V）</li><li>Nutanix AHV</li><li>VMware vSphere ESXi</li></ul><h3 id="vGPU类型"><a href="#vGPU类型" class="headerlink" title="vGPU类型"></a>vGPU类型</h3><p>NVIDIA官方介绍如下：</p><ul><li>vCS：NVIDIA 虚拟计算服务器，加速基于 KVM 的基础架构上的虚拟化 AI 计算工作负载。（如<code>GRID P40-1C</code>）</li><li>vWS： NVIDIA RTX 虚拟工作站，适用于使用图形应用程序的创意和技术专业人士的虚拟工作站。（如<code>GRID P40-1Q</code>）</li><li>vPC： NVIDIA 虚拟 PC，适用于使用办公效率应用程序和多媒体的知识工作者的虚拟桌面 (VDI)。（如<code>GRID P40-1B</code>）</li><li>vApp： NVIDIA 虚拟应用程序，采用远程桌面会话主机 (RDSH) 解决方案的应用程序流。（如<code>GRID P40-1A</code>）</li></ul><h2 id="准备vGPU驱动"><a href="#准备vGPU驱动" class="headerlink" title="准备vGPU驱动"></a>准备vGPU驱动</h2><div class="tag-plugin note" color="warning"><div class="title">注意</div><div class="body"><p>本文中使用的Proxmox VE版本为8.0.3，内核版本为6.2.16-4-pve</p></div></div><h3 id="移除企业源"><a href="#移除企业源" class="headerlink" title="移除企业源"></a>移除企业源</h3><p>Proxmox VE默认使用企业源，如果没有订阅密钥是没有权限访问的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb https://mirrors.tuna.tsinghua.edu.cn/proxmox/debian bookworm pve-no-subscription&quot;</span> &gt;&gt; /etc/apt/sources.list.d/pve-no-subscription.list</span><br><span class="line"><span class="built_in">rm</span> /etc/apt/sources.list.d/pve-enterprise.list</span><br></pre></td></tr></table></figure><h3 id="更新系统"><a href="#更新系统" class="headerlink" title="更新系统"></a>更新系统</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt dist-upgrade</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><p>保证内核为最新版本</p><h3 id="安装必要工具"><a href="#安装必要工具" class="headerlink" title="安装必要工具"></a>安装必要工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y git build-essential dkms pve-headers mdevctl</span><br></pre></td></tr></table></figure><p>其中dkms保证在每次更新内核后会自动编译适应的驱动模块</p><h3 id="启用IOMMU"><a href="#启用IOMMU" class="headerlink" title="启用IOMMU"></a>启用IOMMU</h3><h4 id="一般系统"><a href="#一般系统" class="headerlink" title="一般系统"></a>一般系统</h4><p>编辑<code>/etc/default/grub</code>，找到<code>GRUB_CMDLINE_LINUX_DEFAULT=&quot;quiet&quot;</code>，在其后添加：</p><h5 id="Intel"><a href="#Intel" class="headerlink" title="Intel"></a>Intel</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">intel_iommu=on iommu=pt</span><br></pre></td></tr></table></figure><h5 id="AMD"><a href="#AMD" class="headerlink" title="AMD"></a>AMD</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">amd_iommu=on iommu=pt</span><br></pre></td></tr></table></figure><p>结果应该如下（Intel）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=&quot;quiet intel_iommu=on iommu=pt&quot;</span><br></pre></td></tr></table></figure><h4 id="ZFS上的系统"><a href="#ZFS上的系统" class="headerlink" title="ZFS上的系统"></a>ZFS上的系统</h4><p>编辑<code>/etc/kernel/cmdline</code>，找到<code>root=ZFS=rpool/ROOT/pve-1 boot=zfs</code>，在其后添加：</p><h5 id="Intel-1"><a href="#Intel-1" class="headerlink" title="Intel"></a>Intel</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">intel_iommu=on iommu=pt</span><br></pre></td></tr></table></figure><h5 id="AMD-1"><a href="#AMD-1" class="headerlink" title="AMD"></a>AMD</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">amd_iommu=on iommu=pt</span><br></pre></td></tr></table></figure><p>结果应该如下（Intel）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root=ZFS=rpool/ROOT/pve-1 boot=zfs intel_iommu=on iommu=pt</span><br></pre></td></tr></table></figure><p>现在更新引导配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxmox-boot-tool refresh</span><br></pre></td></tr></table></figure><h3 id="禁止nouveau驱动"><a href="#禁止nouveau驱动" class="headerlink" title="禁止nouveau驱动"></a>禁止nouveau驱动</h3><p>nouveau是一个开源的NVIDIA显卡驱动，它与vGPU驱动冲突，必须禁用它</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;blacklist nouveau&quot;</span> &gt;&gt; /etc/modprobe.d/blacklist-nouveau.conf</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;options nouveau modeset=0&quot;</span> &gt;&gt; /etc/modprobe.d/blacklist-nouveau.conf</span><br></pre></td></tr></table></figure><h3 id="加载vfio模块"><a href="#加载vfio模块" class="headerlink" title="加载vfio模块"></a>加载vfio模块</h3><p>编辑&#x2F;etc&#x2F;modules，添加如下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vfio</span><br><span class="line">vfio_iommu_type1</span><br><span class="line">vfio_pci</span><br><span class="line">vfio_virqfd</span><br></pre></td></tr></table></figure><p>更新initramfs</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update-initramfs -u -k all</span><br></pre></td></tr></table></figure><p>重启</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h3 id="检查IOMMU是否启用"><a href="#检查IOMMU是否启用" class="headerlink" title="检查IOMMU是否启用"></a>检查IOMMU是否启用</h3><p>重启后输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dmesg | grep -e DMAR -e IOMMU</span><br></pre></td></tr></table></figure><p>在我的C602双路服务器上，它输出以下内容：</p><details class="tag-plugin folding" ><summary><span></span></summary><div class="body"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">root@pve-r720:~<span class="comment"># dmesg | grep -e DMAR -e IOMMU</span></span><br><span class="line">[    0.000000] Warning: PCIe ACS overrides enabled; This may allow non-IOMMU protected peer-to-peer DMA</span><br><span class="line">[    0.012034] ACPI: DMAR 0x000000007D3346F4 000158 (v01 DELL   PE_SC3   00000001 DELL 00000001)</span><br><span class="line">[    0.012084] ACPI: Reserving DMAR table memory at [mem 0x7d3346f4-0x7d33484b]</span><br><span class="line">[    0.591102] DMAR: IOMMU enabled</span><br><span class="line">[    1.347160] DMAR: Host address width 46</span><br><span class="line">[    1.347161] DMAR: DRHD base: 0x000000d1100000 flags: 0x0</span><br><span class="line">[    1.347168] DMAR: dmar0: reg_base_addr d1100000 ver 1:0 <span class="built_in">cap</span> d2078c106f0466 ecap f020de</span><br><span class="line">[    1.347170] DMAR: DRHD base: 0x000000dd900000 flags: 0x1</span><br><span class="line">[    1.347175] DMAR: dmar1: reg_base_addr dd900000 ver 1:0 <span class="built_in">cap</span> d2078c106f0466 ecap f020de</span><br><span class="line">[    1.347177] DMAR: RMRR base: 0x0000007f458000 end: 0x0000007f46ffff</span><br><span class="line">[    1.347178] DMAR: RMRR base: 0x0000007f450000 end: 0x0000007f450fff</span><br><span class="line">[    1.347180] DMAR: RMRR base: 0x0000007f452000 end: 0x0000007f452fff</span><br><span class="line">[    1.347181] DMAR: ATSR flags: 0x0</span><br><span class="line">[    1.347183] DMAR-IR: IOAPIC <span class="built_in">id</span> 2 under DRHD base  0xd1100000 IOMMU 0</span><br><span class="line">[    1.347185] DMAR-IR: IOAPIC <span class="built_in">id</span> 0 under DRHD base  0xdd900000 IOMMU 1</span><br><span class="line">[    1.347186] DMAR-IR: IOAPIC <span class="built_in">id</span> 1 under DRHD base  0xdd900000 IOMMU 1</span><br><span class="line">[    1.347187] DMAR-IR: HPET <span class="built_in">id</span> 0 under DRHD base 0xdd900000</span><br><span class="line">[    1.347188] DMAR-IR: x2apic is disabled because BIOS sets x2apic opt out bit.</span><br><span class="line">[    1.347189] DMAR-IR: Use <span class="string">&#x27;intremap=no_x2apic_optout&#x27;</span> to override the BIOS setting.</span><br><span class="line">[    1.347933] DMAR-IR: Enabled IRQ remapping <span class="keyword">in</span> xapic mode</span><br><span class="line">[    2.304979] DMAR: No SATC found</span><br><span class="line">[    2.304981] DMAR: dmar0: Using Queued invalidation</span><br><span class="line">[    2.304990] DMAR: dmar1: Using Queued invalidation</span><br><span class="line">[    2.310738] DMAR: Intel(R) Virtualization Technology <span class="keyword">for</span> Directed I/O</span><br></pre></td></tr></table></figure></div></details><p>关键在于<code>DMAR: IOMMU enabled</code>一行，此行表明IOMMU已启用。</p><h2 id="安装vGPU驱动"><a href="#安装vGPU驱动" class="headerlink" title="安装vGPU驱动"></a>安装vGPU驱动</h2><div class="tag-plugin note" color="warning"><div class="title">注意</div><div class="body"><p>本节使用535.54.06版驱动，GRID版本为16.0。</p></div></div><p>Proxmox VE作为KVM平台，自然需要KVM版的vGPU驱动</p><p>目前仅有16.0版的vGPU驱动支持新的6.2内核，15.3、15.1等版本最高支持到PVE 7</p><p>很不幸，NVIDIA不会让你随便下载高贵的GRID驱动（fuck-you-nvidia.jpg），你需要在<a href="https://nvid.nvidia.com/dashboard/">这里</a>注册一个免费的vGPU许可来下载驱动。</p><div class="tag-plugin note" color="warning"><div class="title">注意</div><div class="body"><p>申请免费许可时，请勿使用@gmail.com、@qq.com等免费邮箱，否则可能会面临人工审核，我的建议是使用自己域名的邮箱。</p></div></div><div class="tag-plugin note" color="green"><div class="title">提示</div><div class="body"><p>觉得注册太麻烦？你也可以去<a href="https://foxi.buduanwang.vip/">佛西大佬的博客</a>下载</p></div></div><p>下载完成后，解压zip文件，在<code>Host_Drivers</code>文件夹中找到<code>NVIDIA-Linux-x86_64-535.54.06-vgpu-kvm.run</code>，将其上传到Proxmox VE中</p><p>在Proxmox VE中执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./NVIDIA-Linux-x86_64-535.54.06-vgpu-kvm.run --dkms</span><br></pre></td></tr></table></figure><p>安装完成后，提示是否要注册DKMS模块，一定要选择Yes，这样在升级内核后，系统会重新编译适应新内核的驱动。</p><div class="tag-plugin note" color="warning"><div class="title">注意</div><div class="body"><p>由于Proxmox VE使用apt update升级系统时不会升级pve-headers，因此务必在升级系统前安装新的pve-headers，避免造成dkms编译失败。</p></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-07-17%2020.46.33.png" alt="截屏2023-07-17 20.46.33" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-07-17 20.46.33</span></div></div><p>重启后执行<code>nvidia-smi</code>，在我的双Tesla P40机器上，输出以下内容（无视那些“vgpu”进程）：</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-07-17%2020.58.06.png" alt="截屏2023-07-17 20.58.06" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-07-17 20.58.06</span></div></div><p>执行<code>mdevctl types</code>查看mdev类型：</p><details class="tag-plugin folding" ><summary><span></span></summary><div class="body"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br></pre></td><td class="code"><pre><span class="line">root@pve-r720:~<span class="comment"># mdevctl types</span></span><br><span class="line">0000:04:00.0</span><br><span class="line">  nvidia-156</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-2B</span><br><span class="line">    Description: num_heads=4, frl_config=45, framebuffer=2048M, max_resolution=5120x2880, max_instance=12</span><br><span class="line">  nvidia-215</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-2B4</span><br><span class="line">    Description: num_heads=4, frl_config=45, framebuffer=2048M, max_resolution=5120x2880, max_instance=12</span><br><span class="line">  nvidia-241</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-1B4</span><br><span class="line">    Description: num_heads=4, frl_config=45, framebuffer=1024M, max_resolution=5120x2880, max_instance=24</span><br><span class="line">  nvidia-46</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-1Q</span><br><span class="line">    Description: num_heads=4, frl_config=60, framebuffer=1024M, max_resolution=5120x2880, max_instance=24</span><br><span class="line">  nvidia-47</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-2Q</span><br><span class="line">    Description: num_heads=4, frl_config=60, framebuffer=2048M, max_resolution=7680x4320, max_instance=12</span><br><span class="line">  nvidia-48</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-3Q</span><br><span class="line">    Description: num_heads=4, frl_config=60, framebuffer=3072M, max_resolution=7680x4320, max_instance=8</span><br><span class="line">  nvidia-49</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-4Q</span><br><span class="line">    Description: num_heads=4, frl_config=60, framebuffer=4096M, max_resolution=7680x4320, max_instance=6</span><br><span class="line">  nvidia-50</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-6Q</span><br><span class="line">    Description: num_heads=4, frl_config=60, framebuffer=6144M, max_resolution=7680x4320, max_instance=4</span><br><span class="line">  nvidia-51</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-8Q</span><br><span class="line">    Description: num_heads=4, frl_config=60, framebuffer=8192M, max_resolution=7680x4320, max_instance=3</span><br><span class="line">  nvidia-52</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-12Q</span><br><span class="line">    Description: num_heads=4, frl_config=60, framebuffer=12288M, max_resolution=7680x4320, max_instance=2</span><br><span class="line">  nvidia-53</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-24Q</span><br><span class="line">    Description: num_heads=4, frl_config=60, framebuffer=24576M, max_resolution=7680x4320, max_instance=1</span><br><span class="line">  nvidia-54</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-1A</span><br><span class="line">    Description: num_heads=1, frl_config=60, framebuffer=1024M, max_resolution=1280x1024, max_instance=24</span><br><span class="line">  nvidia-55</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-2A</span><br><span class="line">    Description: num_heads=1, frl_config=60, framebuffer=2048M, max_resolution=1280x1024, max_instance=12</span><br><span class="line">  nvidia-56</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-3A</span><br><span class="line">    Description: num_heads=1, frl_config=60, framebuffer=3072M, max_resolution=1280x1024, max_instance=8</span><br><span class="line">  nvidia-57</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-4A</span><br><span class="line">    Description: num_heads=1, frl_config=60, framebuffer=4096M, max_resolution=1280x1024, max_instance=6</span><br><span class="line">  nvidia-58</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-6A</span><br><span class="line">    Description: num_heads=1, frl_config=60, framebuffer=6144M, max_resolution=1280x1024, max_instance=4</span><br><span class="line">  nvidia-59</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-8A</span><br><span class="line">    Description: num_heads=1, frl_config=60, framebuffer=8192M, max_resolution=1280x1024, max_instance=3</span><br><span class="line">  nvidia-60</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-12A</span><br><span class="line">    Description: num_heads=1, frl_config=60, framebuffer=12288M, max_resolution=1280x1024, max_instance=2</span><br><span class="line">  nvidia-61</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-24A</span><br><span class="line">    Description: num_heads=1, frl_config=60, framebuffer=24576M, max_resolution=1280x1024, max_instance=1</span><br><span class="line">  nvidia-62</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-1B</span><br><span class="line">    Description: num_heads=4, frl_config=45, framebuffer=1024M, max_resolution=5120x2880, max_instance=24</span><br><span class="line">0000:42:00.0</span><br><span class="line">  nvidia-156</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-2B</span><br><span class="line">    Description: num_heads=4, frl_config=45, framebuffer=2048M, max_resolution=5120x2880, max_instance=12</span><br><span class="line">  nvidia-215</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-2B4</span><br><span class="line">    Description: num_heads=4, frl_config=45, framebuffer=2048M, max_resolution=5120x2880, max_instance=12</span><br><span class="line">  nvidia-241</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-1B4</span><br><span class="line">    Description: num_heads=4, frl_config=45, framebuffer=1024M, max_resolution=5120x2880, max_instance=24</span><br><span class="line">  nvidia-46</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-1Q</span><br><span class="line">    Description: num_heads=4, frl_config=60, framebuffer=1024M, max_resolution=5120x2880, max_instance=24</span><br><span class="line">  nvidia-47</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-2Q</span><br><span class="line">    Description: num_heads=4, frl_config=60, framebuffer=2048M, max_resolution=7680x4320, max_instance=12</span><br><span class="line">  nvidia-48</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-3Q</span><br><span class="line">    Description: num_heads=4, frl_config=60, framebuffer=3072M, max_resolution=7680x4320, max_instance=8</span><br><span class="line">  nvidia-49</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-4Q</span><br><span class="line">    Description: num_heads=4, frl_config=60, framebuffer=4096M, max_resolution=7680x4320, max_instance=6</span><br><span class="line">  nvidia-50</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-6Q</span><br><span class="line">    Description: num_heads=4, frl_config=60, framebuffer=6144M, max_resolution=7680x4320, max_instance=4</span><br><span class="line">  nvidia-51</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-8Q</span><br><span class="line">    Description: num_heads=4, frl_config=60, framebuffer=8192M, max_resolution=7680x4320, max_instance=3</span><br><span class="line">  nvidia-52</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-12Q</span><br><span class="line">    Description: num_heads=4, frl_config=60, framebuffer=12288M, max_resolution=7680x4320, max_instance=2</span><br><span class="line">  nvidia-53</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-24Q</span><br><span class="line">    Description: num_heads=4, frl_config=60, framebuffer=24576M, max_resolution=7680x4320, max_instance=1</span><br><span class="line">  nvidia-54</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-1A</span><br><span class="line">    Description: num_heads=1, frl_config=60, framebuffer=1024M, max_resolution=1280x1024, max_instance=24</span><br><span class="line">  nvidia-55</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-2A</span><br><span class="line">    Description: num_heads=1, frl_config=60, framebuffer=2048M, max_resolution=1280x1024, max_instance=12</span><br><span class="line">  nvidia-56</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-3A</span><br><span class="line">    Description: num_heads=1, frl_config=60, framebuffer=3072M, max_resolution=1280x1024, max_instance=8</span><br><span class="line">  nvidia-57</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-4A</span><br><span class="line">    Description: num_heads=1, frl_config=60, framebuffer=4096M, max_resolution=1280x1024, max_instance=6</span><br><span class="line">  nvidia-58</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-6A</span><br><span class="line">    Description: num_heads=1, frl_config=60, framebuffer=6144M, max_resolution=1280x1024, max_instance=4</span><br><span class="line">  nvidia-59</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-8A</span><br><span class="line">    Description: num_heads=1, frl_config=60, framebuffer=8192M, max_resolution=1280x1024, max_instance=3</span><br><span class="line">  nvidia-60</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-12A</span><br><span class="line">    Description: num_heads=1, frl_config=60, framebuffer=12288M, max_resolution=1280x1024, max_instance=2</span><br><span class="line">  nvidia-61</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-24A</span><br><span class="line">    Description: num_heads=1, frl_config=60, framebuffer=24576M, max_resolution=1280x1024, max_instance=1</span><br><span class="line">  nvidia-62</span><br><span class="line">    Available instances: 0</span><br><span class="line">    Device API: vfio-pci</span><br><span class="line">    Name: GRID P40-1B</span><br><span class="line">    Description: num_heads=4, frl_config=45, framebuffer=1024M, max_resolution=5120x2880, max_instance=24</span><br></pre></td></tr></table></figure></div></details><h2 id="配置vGPU授权服务器"><a href="#配置vGPU授权服务器" class="headerlink" title="配置vGPU授权服务器"></a>配置vGPU授权服务器</h2><p>众所周知，vGPU的授权费极其昂贵，不是富哥很难承受的起，很长一段时间内，众多玩家采用伪造PCI ID的形式来伪装成Quadro显卡，从而骗过NVIDIA的检测。但目前已经有成熟的开源vGPU许可服务器<a href="https://gitea.publichub.eu/oscar.krause/fastapi-dls">fastapi-dls</a>可以直接使用了，官方还提供了<a href="https://hub.docker.com/r/collinwebdesigns/fastapi-dls">Docker</a>，这省了许多事。</p><h3 id="安装容器"><a href="#安装容器" class="headerlink" title="安装容器"></a>安装容器</h3><div class="tag-plugin note" color="green"><div class="title">提示</div><div class="body"><p>建议在虚拟机 &#x2F; LXC中部署此Docker镜像，PVE中直接安装Docker可能会导致VM断网等问题</p></div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拉取镜像</span></span><br><span class="line">docker pull collinwebdesigns/fastapi-dls:latest</span><br><span class="line"><span class="comment"># 创建目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /opt/fastapi-dls/cert</span><br><span class="line"><span class="built_in">cd</span> /opt/fastapi-dls/cert</span><br><span class="line"><span class="comment"># 生成公私钥</span></span><br><span class="line">openssl genrsa -out /opt/fastapi-dls/cert/instance.private.pem 2048 </span><br><span class="line">openssl rsa -<span class="keyword">in</span> /opt/fastapi-dls/cert/instance.private.pem -outform PEM -pubout -out /opt/fastapi-dls/cert/instance.public.pem</span><br><span class="line"><span class="comment"># 生成SSL证书</span></span><br><span class="line">openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout  /opt/fastapi-dls/cert/webserver.key -out /opt/fastapi-dls/cert/webserver.crt</span><br><span class="line"><span class="comment"># 创建容器, 1825是授权天数, YOUR_IP处填VM / LXC的IP</span></span><br><span class="line">docker volume create dls-db</span><br><span class="line">docker run -d --restart=always -e LEASE_EXPIRE_DAYS=1825 -e DLS_URL=&lt;YOUR_IP&gt; -e DLS_PORT=443 -p 443:443 -v /opt/fastapi-dls/cert:/app/cert -v dls-db:/app/database collinwebdesigns/fastapi-dls:latest</span><br></pre></td></tr></table></figure><p>自此，vGPU配置完成！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://docs.nvidia.com/grid/16.0/index.html">NVIDIA Virtual GPU Software Documentation</a></p><p><a href="https://foxi.buduanwang.vip/linux/1809.html/">佛西博客 - 在Proxmox VE 7.2 中开启vGPU_unlock，实现显卡虚拟化 (buduanwang.vip)</a></p><p><a href="https://gitlab.com/polloloco/vgpu-proxmox">PolloLoco &#x2F; NVIDIA vGPU Guide · GitLab</a></p><p><a href="https://gitea.publichub.eu/oscar.krause/fastapi-dls">oscar.krause&#x2F;fastapi-dls: Minimal Delegated License Service (DLS). This is a mirrored repo from https://git.collinwebdesigns.de/oscar.krause/fastapi-dls. - fastapi-dls - Gitea (publichub.eu)</a></p><p><a href="https://hub.docker.com/r/collinwebdesigns/fastapi-dls">collinwebdesigns&#x2F;fastapi-dls - Docker Image | Docker Hub</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;随着互联网设施的建设和云计算的发展，“云桌面”、“云游戏”等概念已逐渐走入人们的视线。无论如何，它都改变了我们理解硬件性能和游戏体验的方式。</summary>
      
    
    
    
    
    <category term="云桌面" scheme="https://rickg.cn/tags/%E4%BA%91%E6%A1%8C%E9%9D%A2/"/>
    
    <category term="PVE" scheme="https://rickg.cn/tags/PVE/"/>
    
    <category term="vGPU" scheme="https://rickg.cn/tags/vGPU/"/>
    
  </entry>
  
  <entry>
    <title>Intel 82599网卡不认光模块的解决方案</title>
    <link href="https://rickg.cn/2023/06/24/solution-for-sfp-modules-not-supported-by-ixgbe/"/>
    <id>https://rickg.cn/2023/06/24/solution-for-sfp-modules-not-supported-by-ixgbe/</id>
    <published>2023-06-24T14:05:27.000Z</published>
    <updated>2023-06-24T14:23:34.298Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>最近购买了一台RH1288H V3，想与R720之间构建万兆内网，于是弄了两个Huawei光模块，上机后发现R720找不到光模块所在网口，但是lspci可以看到网卡设备：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@pve-r720:~<span class="comment"># lspci | grep 82599</span></span><br><span class="line">01:00.0 Ethernet controller: Intel Corporation 82599ES 10-Gigabit SFI/SFP+ Network Connection (rev 01)</span><br><span class="line">01:00.1 Ethernet controller: Intel Corporation 82599ES 10-Gigabit SFI/SFP+ Network Connection (rev 01)</span><br></pre></td></tr></table></figure><p>执行<code>dmesg ｜ grep ixgbe</code>以后发现有不支持的模块报错</p><p>原因在于ixgbe驱动默认情况下仅支持Intel原厂光模块，使用第三方光模块会导致网卡驱动加载失败，插上模块时网络接口消失</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="临时"><a href="#临时" class="headerlink" title="临时"></a>临时</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 卸载ixgbe驱动</span></span><br><span class="line">root@pve-r720:~<span class="comment"># rmmod ixgbe</span></span><br><span class="line"><span class="comment"># 以支持第三方模块模式重新加载ixgbe驱动</span></span><br><span class="line">root@pve-r720:~<span class="comment"># modprobe ixgbe allow_unsupported_sfp=1</span></span><br></pre></td></tr></table></figure><h3 id="一劳永逸"><a href="#一劳永逸" class="headerlink" title="一劳永逸"></a>一劳永逸</h3><p>编辑grub配置文件<code>/etc/default/grub</code>，在GRUB_CMDLINE_LINUX项增加<code>ixgbe.allow_unsupported_sfp=1</code>：</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-06-24%2022.21.18.png" alt="截屏2023-06-24 22.21.18" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-06-24 22.21.18</span></div></div><p>更新grub：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@pve-r720:~<span class="comment"># update-grub2</span></span><br></pre></td></tr></table></figure><p>重启后生效</p><p><strong>祝搞机愉快！</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;最近购买了一台RH1288H V3，想与R720之间构建万兆内网，于是弄了两个Huawei光模块，上机后发现R720找不到光模块所在网口，但</summary>
      
    
    
    
    
    <category term="intel" scheme="https://rickg.cn/tags/intel/"/>
    
    <category term="82599" scheme="https://rickg.cn/tags/82599/"/>
    
    <category term="10Gb" scheme="https://rickg.cn/tags/10Gb/"/>
    
  </entry>
  
  <entry>
    <title>使用Wireguard实现异地组网并构建IPv6隧道</title>
    <link href="https://rickg.cn/2023/06/02/wireguard-lan-fusion-with-ipv6-tunnel/"/>
    <id>https://rickg.cn/2023/06/02/wireguard-lan-fusion-with-ipv6-tunnel/</id>
    <published>2023-06-02T14:01:59.000Z</published>
    <updated>2023-06-13T00:56:52.404Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在研究Wireguard异地组网，打算将家里和机房的局域网组合在一起。同时朋友有使用Wireguard IPv6上网的需求，决定再在组网的基础上添加一个IPv6隧道。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>两个网段不同的局域网（例如<code>10.10.10.0/24</code> 和 <code>192.168.1.0/24</code>）</li><li>两台OpenWrt（至少一个接入公网IPv6）</li><li>任意客户端</li></ul><h2 id="为机房PVE添加NAT网桥"><a href="#为机房PVE添加NAT网桥" class="headerlink" title="为机房PVE添加NAT网桥"></a>为机房PVE添加NAT网桥</h2><p>PVE默认的网桥是采用桥接方式，这次我要为它添加一个IPv4 &#x2F; IPv6双栈NAT网桥</p><h3 id="添加网桥"><a href="#添加网桥" class="headerlink" title="添加网桥"></a>添加网桥</h3><p>添加一个网桥vmbr1，如图所示，将10.10.10.1预留给OpenWrt，IPv6 ULA地址给OpenWrt自动分配</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-06-03%2008.56.13.png" alt="截屏2023-06-03 08.56.13" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-06-03 08.56.13</span></div></div><p>为了给vmbr1网桥下的设备分配IP地址，我们需要安装DHCP服务，这里由于组网需要我选择安装OpenWrt</p><h3 id="安装OpenWrt"><a href="#安装OpenWrt" class="headerlink" title="安装OpenWrt"></a>安装OpenWrt</h3><p>创建虚拟机openwrt，配置如图所示</p><blockquote><p>注意：先添加vmbr1再添加vmbr0，这样OpenWrt才会将vmbr0（互联网）视为WAN口</p></blockquote><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-06-03%2008.59.48.png" alt="截屏2023-06-03 08.59.48" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-06-03 08.59.48</span></div></div><p>下载OpenWrt镜像并导入硬盘，这里可以参考我一篇没写完的文章（bushi</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://rickg.cn/2022/05/25/pve-openwrt/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon"><div class="left"><span class="title">https://rickg.cn/2022/05/25/pve-openwrt/</span><span class="cap link fs12">https://rickg.cn/2022/05/25/pve-openwrt/</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.4/link/8f277b4ee0ecd.svg"></div></div></a></div><p>推荐的镜像：</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://openwrt.mpdn.fun:8443/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon"><div class="left"><span class="title">https://openwrt.mpdn.fun:8443/</span><span class="cap link fs12">https://openwrt.mpdn.fun:8443/</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.4/link/8f277b4ee0ecd.svg"></div></div></a></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qm importdisk [vmid] /var/lib/vz/template/iso/bleach-plus-20230601-openwrt-x86-64-generic-squashfs-combined-efi.img <span class="built_in">local</span> --format=qcow2</span><br></pre></td></tr></table></figure><p>导入完成后，启动OpenWrt，编辑<code>/etc/config/network</code>，修改LAN口IP</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-06-03%2009.10.01.png" alt="截屏2023-06-03 09.10.01" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-06-03 09.10.01</span></div></div><p>重启OpenWrt后，在vmbr1网桥下任意虚拟机访问10.10.10.1，即可登录OpenWrt</p><h3 id="配置NAT6"><a href="#配置NAT6" class="headerlink" title="配置NAT6"></a>配置NAT6</h3><p>安装完OpenWrt后，尽管此时我们拥有了IPv6 ULA地址，但未配置NAT6，因此并不能访问IPv6互联网</p><p>编辑<code>/etc/sysctl.d/forward.conf</code> ，添加以下内容：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">net.ipv4.ip_forward</span>=<span class="string">1</span></span><br><span class="line"><span class="attr">net.ipv6.conf.all.forwarding</span>=<span class="string">1</span></span><br><span class="line"><span class="attr">net.ipv6.conf.eth1.autoconf</span>=<span class="string">1</span></span><br><span class="line"><span class="attr">net.ipv6.conf.eth1.accept_ra</span>=<span class="string">2</span></span><br></pre></td></tr></table></figure><p>其中<code>eth1</code>为WAN口接口名</p><p>重启OpenWrt后，访问10.10.10.1，打开<code>网络-&gt;防火墙-&gt;自定义规则</code>，添加以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Enable IPv6 NAT</span></span><br><span class="line">ip6tables -t nat -A POSTROUTING -o eth1 -j MASQUERADE</span><br></pre></td></tr></table></figure><p>点击<code>重启防火墙</code>后，vmbr1下的IPv6设备应该可以访问IPv6互联网了</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-06-03%2009.31.43.png" alt="截屏2023-06-03 09.31.43" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-06-03 09.31.43</span></div></div><h2 id="配置Wireguard-VPN"><a href="#配置Wireguard-VPN" class="headerlink" title="配置Wireguard VPN"></a>配置Wireguard VPN</h2><h3 id="配置家中OpenWrt"><a href="#配置家中OpenWrt" class="headerlink" title="配置家中OpenWrt"></a>配置家中OpenWrt</h3><p>ssh连接到路由器，创建密钥目录并设定掩码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> keys</span><br><span class="line"><span class="built_in">cd</span> keys </span><br><span class="line"><span class="built_in">umask</span> 077</span><br></pre></td></tr></table></figure><p>创建并查看密钥：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wg genkey &gt; openwrt-home.key</span><br><span class="line"><span class="built_in">cat</span> openwrt-home.key</span><br><span class="line">wg pubkey &lt; openwrt-home.key &gt; openwrt-home.pub</span><br><span class="line"><span class="built_in">cat</span> openwrt-home.pub</span><br></pre></td></tr></table></figure><p>打开OpenWrt，点击<code>网络-&gt;接口-&gt;添加新接口</code>，名称为<code>wg1</code>，协议为<code>WireGuard VPN</code></p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-06-03%2009.36.03.png" alt="截屏2023-06-03 09.36.03" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-06-03 09.36.03</span></div></div><p>创建后自动打开接口编辑界面</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-06-03%2013.15.01.png" alt="截屏2023-06-03 13.15.01" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-06-03 13.15.01</span></div></div><p>将私钥填入配置界面，监听端口任意，建议选高位端口，防止被运营商干扰</p><p>IP地址一栏，我这里选用<code>172.17.0.1/32</code>的B类地址，个人建议用<code>10.0.0.0/8</code>的A类地址，自定义程度更高。对于IPv6地址，使用fd00::&#x2F;8开头的本地地址即可，如图中的fd45:da8::1&#x2F;64，配置完后保存并应用。</p><h3 id="配置机房OpenWrt"><a href="#配置机房OpenWrt" class="headerlink" title="配置机房OpenWrt"></a>配置机房OpenWrt</h3><p>生成公私钥等同上，但是IP填<code>172.17.0.2/32</code>和<code>fd45:da8::2/64</code>，如图所示：</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-06-03%2013.26.01.png" alt="截屏2023-06-03 13.26.01" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-06-03 13.26.01</span></div></div><h3 id="配置对端（Peer）"><a href="#配置对端（Peer）" class="headerlink" title="配置对端（Peer）"></a>配置对端（Peer）</h3><p>登入任意路由器，生成一个预共享密钥，增强安全性：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wg genpsk</span><br></pre></td></tr></table></figure><p>该密钥在所有端通用，须保存好。</p><p>在Peers处点击添加，<code>公钥</code>填写对方的（如家里OpenWrt填写机房公钥），<code>预共享密钥</code>输入刚刚生成的，<code>端点主机</code>输入对端IP（这里我两端均为家宽，因此做了DDNS），<code>端口</code>输入配置的端口，<code>持续Keep-Alive</code>不填。</p><p>对于<code>允许的IP</code>，需要输入两项，第一项是WireGuard的IP段，即<code>172.17.0.0/24</code>，第二项即对方机器所处内网IP段，如对端为家则为<code>192.168.1.0/24</code>，如图所示：</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-06-03%2013.36.24.png" alt="截屏2023-06-03 13.36.24" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-06-03 13.36.24</span></div></div><p>配置完后保存并应用，点击WireGuard接口旁的“连接”，重启接口。</p><p>若要查看是否成功连接，点击LuCI界面中的<code>状态-&gt;WireGuard状态</code>即可看到对端连接信息：</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-06-03%2013.39.43.png" alt="截屏2023-06-03 13.39.43" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-06-03 13.39.43</span></div></div><p>此时ping一下对端内网段的IP，哈哈，是不是很激动？</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-06-03%2013.40.38.png" alt="截屏2023-06-03 13.40.38" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-06-03 13.40.38</span></div></div><h2 id="配置客户端"><a href="#配置客户端" class="headerlink" title="配置客户端"></a>配置客户端</h2><h3 id="创建密钥"><a href="#创建密钥" class="headerlink" title="创建密钥"></a>创建密钥</h3><p>对于macOS &#x2F; Windows &#x2F; Android &#x2F; iOS等具有GUI等客户端，直接生成一对公私钥即可：<div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-06-03%2017.09.05.png" alt="截屏2023-06-03 17.09.05" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-06-03 17.09.05</span></div></div></p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230603170949355.png" alt="image-20230603170949355" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230603170949355</span></div></div><p>对于Linux，参照上文</p><h3 id="编写配置文件"><a href="#编写配置文件" class="headerlink" title="编写配置文件"></a>编写配置文件</h3><p>添加空隧道，填写以下配置文件：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">[Interface]</span></span><br><span class="line"><span class="attr">PrivateKey</span> = <span class="string">[你的私钥]</span></span><br><span class="line"><span class="attr">Address</span> = <span class="string">172.17.0.4/32, fd45:da8::4/128</span></span><br><span class="line"><span class="attr">DNS</span> = <span class="string">119.29.29.29, 2402:4e00::</span></span><br><span class="line"><span class="attr">MTU</span> = <span class="string">1420</span></span><br><span class="line"></span><br><span class="line"><span class="attr">[Peer]</span></span><br><span class="line"><span class="attr">PublicKey</span> = <span class="string">[服务端公钥]</span></span><br><span class="line"><span class="attr">PresharedKey</span> = <span class="string">[预共享密钥]</span></span><br><span class="line"><span class="attr">AllowedIPs</span> = <span class="string">0.0.0.0/0, ::/0</span></span><br><span class="line"><span class="attr">Endpoint</span> = <span class="string">[服务端IP]:端口</span></span><br><span class="line"><span class="attr">PersistentKeepalive</span> = <span class="string">25</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>对于<code>允许的IP</code>即<code>AllowedIPs</code>：填写<code>0.0.0.0/0, ::/0</code>即代理IPv4和IPv6所有流量，其他的一些示例：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 只需访问内网段10.10.10.0/24，其他流量不走WireGuard</span></span><br><span class="line"><span class="attr">AllowedIPs</span> = <span class="string">10.10.10.0/24</span></span><br><span class="line"><span class="comment"># 全局代理，只允许IPv4流量</span></span><br><span class="line"><span class="attr">AllowedIPs</span> = <span class="string">0.0.0.0/0</span></span><br><span class="line"><span class="comment"># 全局代理，只允许IPv6流量</span></span><br><span class="line"><span class="attr">AllowedIPs</span> = <span class="string">::/0</span></span><br></pre></td></tr></table></figure><p>保存配置文件后，在WireGuard客户端中导入即可，当然，在正式使用之前，我们还需在服务端中添加客户端作为对端。</p><h3 id="配置服务端"><a href="#配置服务端" class="headerlink" title="配置服务端"></a>配置服务端</h3><p>打开OpenWrt的wg0接口，添加一个Peers，但是这次无需输入端点主机和端口，因为客户端可能位于多层NAT之后：</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-06-03%2017.32.29.png" alt="截屏2023-06-03 17.32.29" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-06-03 17.32.29</span></div></div><p>保存后，重启wg0接口，现在即可打开客户端享受安全、快速的WireGuard VPN了！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近在研究Wireguard异地组网，打算将家里和机房的局域网组合在一起。同时朋友有使用Wireguard IPv6上网的需求，决定再在组网</summary>
      
    
    
    
    
    <category term="Wireguard" scheme="https://rickg.cn/tags/Wireguard/"/>
    
    <category term="异地组网" scheme="https://rickg.cn/tags/%E5%BC%82%E5%9C%B0%E7%BB%84%E7%BD%91/"/>
    
    <category term="IPv6" scheme="https://rickg.cn/tags/IPv6/"/>
    
  </entry>
  
  <entry>
    <title>使用iptables来通过网线共享网络</title>
    <link href="https://rickg.cn/2023/05/31/iptables-one-wire-one-net/"/>
    <id>https://rickg.cn/2023/05/31/iptables-one-wire-one-net/</id>
    <published>2023-05-31T06:57:42.000Z</published>
    <updated>2023-05-31T07:55:35.568Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在计划加一台服务器，与原本的R720组成40G内网，然而路由器的网口已经不够了，心想能否直接通过40G网线来将R720的互联网共享给新机器，于是便有了这篇文章。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>计算机两台（一台要有双网卡</li><li>网线一根</li><li>互联网接入点一个</li></ul><p>由于上面的我统统没有（bushi，所以这次技术验证放在了PVE中进行。</p><ol><li><p>创建网桥vmbr1，无需绑定物理接口，模拟两机通过网线相连</p></li><li><p>创建两台虚拟机，名字分别为<code>test-network</code>、<code>test-nonetwork</code> ，配置如下（串行接口可以忽略</p></li></ol><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230531150654332.png" alt="image-20230531150654332" style="zoom:50%;" /><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230531150731478.png" alt="image-20230531150731478" style="zoom:50%;" /><ol start="3"><li>在两台机器上安装Debian 11系统</li></ol><h2 id="配置计算机A"><a href="#配置计算机A" class="headerlink" title="配置计算机A"></a>配置计算机A</h2><p>Well，现在我们来配置计算机A，也就是共享网络的机器</p><h3 id="配置IP地址"><a href="#配置IP地址" class="headerlink" title="配置IP地址"></a>配置IP地址</h3><p>编辑<code>/etc/network/interfaces</code> ，添加如下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">auto ens18</span><br><span class="line">iface ens18 inet dhcp</span><br><span class="line"></span><br><span class="line">allow-hotplug ens19</span><br><span class="line">iface ens19 inet static</span><br><span class="line">        address 172.16.0.1/24</span><br><span class="line">        gateway 172.16.0.1</span><br><span class="line">iface ens19 inet6 static</span><br><span class="line">        address 2001:db8::1234/64</span><br><span class="line">        gateway 2001:db8::1234</span><br></pre></td></tr></table></figure><p><code>ens18</code> 即连接互联网的端口，<code>ens19</code> 即与计算机B相连的端口</p><p>从上面的内容可以得知，我们要将<code>ens19</code>端口的<code>IPv4</code>地址配置为<code>172.16.0.1</code>，子网掩码为<code>255.255.255.0</code>，默认网关为<code>本机IP</code>；<code>IPv6</code>地址为<code>2001:db8::1234</code>，子网掩码为<code>64</code>，默认网关同样为<code>本机IP</code>。</p><h3 id="配置iptables"><a href="#配置iptables" class="headerlink" title="配置iptables"></a>配置iptables</h3><p>接下来是重头戏，没有iptables，就算两机的IP正确，计算机B也无法访问互联网。</p><p>安装iptables：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install iptables</span><br></pre></td></tr></table></figure><p>输入以下指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># IPv4 NAT</span></span><br><span class="line">sudo iptables -t nat -A POSTROUTING -o ens18 -j MASQUERADE</span><br><span class="line">sudo iptables -A FORWARD -i ens18 -o ens19 -m state --state RELATED,ESTABLISHED -j ACCEPT</span><br><span class="line">sudo iptables -A FORWARD -i ens19 -o ens18 -j ACCEPT</span><br><span class="line"><span class="comment"># IPv6 NAT</span></span><br><span class="line">sudo ip6tables -t nat -A POSTROUTING -o ens18 -j MASQUERADE</span><br><span class="line">sudo ip6tables -A FORWARD -i ens18 -o ens19 -m state --state RELATED,ESTABLISHED -j ACCEPT</span><br><span class="line">sudo ip6tables -A FORWARD -i ens19 -o ens18 -j ACCEPT</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这配置了网络地址转换（NAT）</p><h3 id="保存iptables"><a href="#保存iptables" class="headerlink" title="保存iptables"></a>保存iptables</h3><p>安装iptables-persistent：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install iptables-persistent</span><br></pre></td></tr></table></figure><p>安装过程中会提示是否保存iptables，选择Yes即可</p><p>日后若要保存刚输入的iptables，键入<code>sudo netfilter-persistent save</code>即可</p><h3 id="启用IP转发"><a href="#启用IP转发" class="headerlink" title="启用IP转发"></a>启用IP转发</h3><p>现在让我们进行最后一步：打开IPv4和IPv6的转发</p><p>编辑<code>/etc/sysctl.conf</code> ， 找到以下两行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#net.ipv4.ip_forward=1</span><br><span class="line">#net.ipv6.conf.all.forwarding=1</span><br></pre></td></tr></table></figure><p>分别将其取消注释，同时在文件尾部添加以下两行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net.ipv6.conf.ens18.autoconf=1</span><br><span class="line">net.ipv6.conf.ens18.accept_ra=2</span><br></pre></td></tr></table></figure><p>其中<code>ens18</code>为互联网端口号，由于IPv6转发的启用会全局禁用SLAAC获取IPv6地址，这两行将重新启用在该端口上的SLAAC功能。</p><p>保存文件，重新启动计算机，计算机A的配置部分就完成了。</p><h2 id="配置计算机B"><a href="#配置计算机B" class="headerlink" title="配置计算机B"></a>配置计算机B</h2><p>计算机B的配置非常简单，只需要配置IP和默认网关即可</p><p>编辑<code>/etc/network/interfaces</code> ，添加以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">auto ens18</span><br><span class="line">iface ens18 inet static</span><br><span class="line">        address 172.16.0.2/24</span><br><span class="line">        gateway 172.16.0.2</span><br><span class="line">iface ens18 inet6 static</span><br><span class="line">        address 2001:db8::5678/64</span><br><span class="line">        gateway 2001:db8::1234</span><br></pre></td></tr></table></figure><p>保存后重启计算机，就可以查看实际效果了。</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="ifconfig"><a href="#ifconfig" class="headerlink" title="ifconfig"></a>ifconfig</h3><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-05-31%2015.33.21.png" alt="截屏2023-05-31 15.33.21" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-05-31 15.33.21</span></div></div><h3 id="IPv4-Ping"><a href="#IPv4-Ping" class="headerlink" title="IPv4 Ping"></a>IPv4 Ping</h3><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-05-31%2015.32.05.png" alt="截屏2023-05-31 15.32.05" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-05-31 15.32.05</span></div></div><h3 id="IPv6-Ping"><a href="#IPv6-Ping" class="headerlink" title="IPv6 Ping"></a>IPv6 Ping</h3><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-05-31%2015.31.25.png" alt="截屏2023-05-31 15.31.25" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-05-31 15.31.25</span></div></div><h3 id="Speedtest"><a href="#Speedtest" class="headerlink" title="Speedtest"></a>Speedtest</h3><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/%E6%88%AA%E5%B1%8F2023-05-31%2015.37.40.png" alt="截屏2023-05-31 15.37.40" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">截屏2023-05-31 15.37.40</span></div></div><h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><p>很显然，这种基于NAT的上网方式的缺点在于没有独立的IP地址。由于上游计算机无法获得IPv6前缀，本机也无法获得公网IPv6地址，对于一些需要公网IP的服务（例如BT）不是很友好。同时，NAT会降低网络性能。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近在计划加一台服务器，与原本的R720组成40G内网，然而路由器的网口已经不够了，心想能否直接通过40G网线来将R720的互联网共享给新机</summary>
      
    
    
    
    
    <category term="iptables" scheme="https://rickg.cn/tags/iptables/"/>
    
    <category term="网络" scheme="https://rickg.cn/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>NAS从入门到Boom② —— 安装Jellyfin并配置硬解</title>
    <link href="https://rickg.cn/2023/02/27/nas-from-entry-to-boom-2/"/>
    <id>https://rickg.cn/2023/02/27/nas-from-entry-to-boom-2/</id>
    <published>2023-02-27T01:50:50.000Z</published>
    <updated>2023-02-27T02:37:45.203Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>安装完<code>Portainer</code>以后，则是安装媒体服务器，这里我选择了开源、免费的<code>Jellyfin</code>，而安装方式则采用简单方便的<code>docker-compose</code>。</p><h2 id="如何在Portainer中使用docker-compose"><a href="#如何在Portainer中使用docker-compose" class="headerlink" title="如何在Portainer中使用docker-compose"></a>如何在Portainer中使用docker-compose</h2><p>访问Portainer后台，点击<code>local</code></p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230227101834770.png" alt="image-20230227101834770" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230227101834770</span></div></div><p>点击左侧的<code>Stacks</code></p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230227101907477.png" alt="image-20230227101907477" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230227101907477</span></div></div><p>点击<code>Add stack</code></p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230227101958786.png" alt="image-20230227101958786" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230227101958786</span></div></div><p>如图所示</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230227102126435.png" alt="image-20230227102126435" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230227102126435</span></div></div><p>最后点击底部的<code>Deploy the stack</code>即可部署容器</p><h2 id="NVIDIA专属-配置nvidia-docker-toolkit"><a href="#NVIDIA专属-配置nvidia-docker-toolkit" class="headerlink" title="(NVIDIA专属) 配置nvidia-docker-toolkit"></a>(NVIDIA专属) 配置nvidia-docker-toolkit</h2><p>对于NVIDIA GPU，我们需要安装一点小小的软件包才能使它在docker容器里工作</p><blockquote><p>参照：<a href="https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html#docker">Installation Guide — NVIDIA Cloud Native Technologies documentation</a></p></blockquote><p>我们直接使用官方的指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">distribution=$(. /etc/os-release;<span class="built_in">echo</span> $ID<span class="variable">$VERSION_ID</span>) \</span><br><span class="line">      &amp;&amp; curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \</span><br><span class="line">      &amp;&amp; curl -s -L https://nvidia.github.io/libnvidia-container/<span class="variable">$distribution</span>/libnvidia-container.list | \</span><br><span class="line">            sed <span class="string">&#x27;s#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g&#x27;</span> | \</span><br><span class="line">            sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/nvidia-container-toolkit.list</span><br></pre></td></tr></table></figure><p>然后安装<code>nvidia-container-toolkit</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y nvidia-container-toolkit</span><br></pre></td></tr></table></figure><h2 id="配置docker-compose"><a href="#配置docker-compose" class="headerlink" title="配置docker-compose"></a>配置docker-compose</h2><p>话不多说，直接上配置文件：</p><h3 id="使用NVENC"><a href="#使用NVENC" class="headerlink" title="使用NVENC"></a>使用NVENC</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&quot;3&quot;</span></span><br><span class="line">services:</span><br><span class="line">  jellyfin:</span><br><span class="line">    image: nyanmisaka/jellyfin:latest <span class="comment"># 使用中国特供版镜像，兼容性更好</span></span><br><span class="line">    container_name: jellyfin</span><br><span class="line">    environment:</span><br><span class="line">      - PUID=<span class="number">1000</span></span><br><span class="line">      - PGID=<span class="number">1000</span></span><br><span class="line">      - TZ=Asia/Shanghai</span><br><span class="line">      - JELLYFIN_PublishedServerUrl=<span class="number">192.168</span>.<span class="number">1.3</span> <span class="comment"># 这里是你Jellyfin的地址</span></span><br><span class="line">      - NVIDIA_DRIVER_CAPABILITIES=all <span class="comment"># NVIDIA专属配置项</span></span><br><span class="line">      - NVIDIA_VISIBLE_DEVICES=all <span class="comment"># NVIDIA专属配置项</span></span><br><span class="line">    volumes: <span class="comment"># volumes按需配置</span></span><br><span class="line">      - /path_to_your_config:/config</span><br><span class="line">      - /path_to_your_tvshows:/data/tvshows</span><br><span class="line">      - /path_to_your_movies:/data/movies</span><br><span class="line">      - /path_to_your_animes:/data/animes</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="number">8096</span>:<span class="number">8096</span> <span class="comment"># http访问端口</span></span><br><span class="line">      - <span class="number">8920</span>:<span class="number">8920</span> <span class="comment"># https访问端口</span></span><br><span class="line">      - <span class="number">7359</span>:<span class="number">7359</span>/udp</span><br><span class="line">      - <span class="number">1900</span>:<span class="number">1900</span>/udp</span><br><span class="line">    network_mode: bridge</span><br><span class="line">    deploy: <span class="comment"># 使用NVIDIA GPU的这样设置</span></span><br><span class="line">       resources:</span><br><span class="line">         reservations:</span><br><span class="line">           devices:</span><br><span class="line">             - capabilities: [gpu]</span><br><span class="line">    restart: unless-stopped</span><br></pre></td></tr></table></figure><h3 id="使用Video-Acceleration-API-VAAPI"><a href="#使用Video-Acceleration-API-VAAPI" class="headerlink" title="使用Video Acceleration API (VAAPI)"></a>使用Video Acceleration API (VAAPI)</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&quot;3&quot;</span></span><br><span class="line">services:</span><br><span class="line">  jellyfin:</span><br><span class="line">    image: nyanmisaka/jellyfin:latest <span class="comment"># 使用中国特供版镜像，兼容性更好</span></span><br><span class="line">    container_name: jellyfin</span><br><span class="line">    environment:</span><br><span class="line">      - PUID=<span class="number">1000</span></span><br><span class="line">      - PGID=<span class="number">1000</span></span><br><span class="line">      - TZ=Asia/Shanghai</span><br><span class="line">      - JELLYFIN_PublishedServerUrl=<span class="number">192.168</span>.<span class="number">1.3</span> <span class="comment"># 这里是你Jellyfin的地址</span></span><br><span class="line">    volumes: <span class="comment"># volumes按需配置</span></span><br><span class="line">      - /path_to_your_config:/config</span><br><span class="line">      - /path_to_your_tvshows:/data/tvshows</span><br><span class="line">      - /path_to_your_movies:/data/movies</span><br><span class="line">      - /path_to_your_animes:/data/animes</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="number">8096</span>:<span class="number">8096</span> <span class="comment"># http访问端口</span></span><br><span class="line">      - <span class="number">8920</span>:<span class="number">8920</span> <span class="comment"># https访问端口</span></span><br><span class="line">      - <span class="number">7359</span>:<span class="number">7359</span>/udp</span><br><span class="line">      - <span class="number">1900</span>:<span class="number">1900</span>/udp</span><br><span class="line">    network_mode: bridge</span><br><span class="line">    devices:</span><br><span class="line">      - /dev/dri:/dev/dri</span><br><span class="line">    restart: unless-stopped</span><br></pre></td></tr></table></figure><p>配置完成后，如果你的显卡没有问题，docker容器应该很快会部署完成</p><h2 id="没有Portainer？"><a href="#没有Portainer？" class="headerlink" title="没有Portainer？"></a>没有Portainer？</h2><p>没有<code>Portainer</code>？不喜欢<code>docker-compose</code>？没关系，本部分将使用传统<code>docker-cli</code>部署<code>Jellyfin</code></p><blockquote><p>相关条目注释请看上一段</p></blockquote><h3 id="使用NVENC-1"><a href="#使用NVENC-1" class="headerlink" title="使用NVENC"></a>使用NVENC</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --name=jellyfin \</span><br><span class="line">  -e PUID=1000 \</span><br><span class="line">  -e PGID=1000 \</span><br><span class="line">  -e TZ=Asia/Shanghai \</span><br><span class="line">  -e JELLYFIN_PublishedServerUrl=192.168.0.5 \</span><br><span class="line">  -e NVIDIA_DRIVER_CAPABILITIES=all \</span><br><span class="line">  -e NVIDIA_VISIBLE_DEVICES=all \</span><br><span class="line">  --gpus all \</span><br><span class="line">  -p 8096:8096 \</span><br><span class="line">  -p 8920:8920 \</span><br><span class="line">  -p 7359:7359/udp \</span><br><span class="line">  -p 1900:1900/udp \</span><br><span class="line">  -v /path/to/library:/config \</span><br><span class="line">  -v /path/to/tvseries:/data/tvshows \</span><br><span class="line">  -v /path/to/movies:/data/movies \</span><br><span class="line">  --restart unless-stopped \</span><br><span class="line">  nyanmisaka/jellyfin:latest</span><br></pre></td></tr></table></figure><h3 id="使用Video-Acceleration-API-VAAPI-1"><a href="#使用Video-Acceleration-API-VAAPI-1" class="headerlink" title="使用Video Acceleration API (VAAPI)"></a>使用Video Acceleration API (VAAPI)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --device=/dev/dri:/dev/dri \</span><br><span class="line">  --name=jellyfin \</span><br><span class="line">  -e PUID=1000 \</span><br><span class="line">  -e PGID=1000 \</span><br><span class="line">  -e TZ=Asia/Shanghai \</span><br><span class="line">  -e JELLYFIN_PublishedServerUrl=192.168.0.5 \</span><br><span class="line">  -p 8096:8096 \</span><br><span class="line">  -p 8920:8920 \</span><br><span class="line">  -p 7359:7359/udp \</span><br><span class="line">  -p 1900:1900/udp \</span><br><span class="line">  -v /path/to/library:/config \</span><br><span class="line">  -v /path/to/tvseries:/data/tvshows \</span><br><span class="line">  -v /path/to/movies:/data/movies \</span><br><span class="line">  --restart unless-stopped \</span><br><span class="line">  nyanmisaka/jellyfin:latest</span><br></pre></td></tr></table></figure><h2 id="配置Jellyfin"><a href="#配置Jellyfin" class="headerlink" title="配置Jellyfin"></a>配置Jellyfin</h2><p>登录<code>Jellyfin</code>，语言、地区选中文（这里我已经配置过所以不能再演示了），然后点击左上角的“三条杠”，再点击<code>控制台</code>，如图所示</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230227100358116.png" alt="image-20230227100358116" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230227100358116</span></div></div><p>然后点击<code>播放</code>，如图所示</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230227100529209.png" alt="image-20230227100529209" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230227100529209</span></div></div><p>如果你是NVIDIA GPU，按如图所示配置就可以了</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230227100622041.png" alt="image-20230227100622041" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230227100622041</span></div></div><blockquote><p>注：这里硬件解码格式建议和你GPU支持解码的格式相同，N卡可以参考此链接：<a href="https://developer.nvidia.com/video-encode-and-decode-gpu-support-matrix-new">https://developer.nvidia.com/video-encode-and-decode-gpu-support-matrix-new</a></p></blockquote><p>如果你是Intel核显或者是想使用VAAPI，则按以下配置</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230227100853142.png" alt="image-20230227100853142" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230227100853142</span></div></div><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>配置完成后保存，我们打开一个4K HDR视频看看效果</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230227101511721.png" alt="image-20230227101511721" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230227101511721</span></div></div><p>可以看到视频可以较为流畅的播放（如果使用T400或者更好的显卡，转码帧率会更高）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;安装完&lt;code&gt;Portainer&lt;/code&gt;以后，则是安装媒体服务器，这里我选择了开源、免费的&lt;code&gt;Jellyfin&lt;/code</summary>
      
    
    
    
    
    <category term="nas" scheme="https://rickg.cn/tags/nas/"/>
    
    <category term="jellyfin" scheme="https://rickg.cn/tags/jellyfin/"/>
    
  </entry>
  
  <entry>
    <title>使用Cloudflare Zero Trust进行内网穿透</title>
    <link href="https://rickg.cn/2023/02/25/tutorial-cloudflare-zero-trust/"/>
    <id>https://rickg.cn/2023/02/25/tutorial-cloudflare-zero-trust/</id>
    <published>2023-02-25T10:47:06.000Z</published>
    <updated>2023-02-25T11:52:26.919Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Zero Trust是Cloudflare公司推出的一项企业级虚拟网关服务，官方对其介绍如下：</p><blockquote><h3 id="Cloudflare-Zero-Trust"><a href="#Cloudflare-Zero-Trust" class="headerlink" title="Cloudflare Zero Trust"></a>Cloudflare Zero Trust</h3><p>Cloudflare Zero Trust是一个安全框架，旨在通过验证和保护所有的网络访问（无论用户或地点）来保护组织免受网络威胁。该框架基于 “不信任任何人 “的原则，这意味着所有访问请求在被批准之前必须经过验证和授权。</p><p>Zero Trust “旨在提供一种全面的安全方法，涵盖一个组织的网络和基础设施的所有方面。这包括用户认证、设备安全、网络分段和应用安全。</p><p>Zero Trust的主要好处之一是它能够提供细化的访问控制，使企业能够根据用户角色和权限限制对敏感资源的访问。这可以通过最小化攻击面和限制任何潜在漏洞的影响来帮助防止数据泄露和其他安全事件。</p><p>Cloudflare Zero Trust是一项基于云的服务，可以很容易地与组织的现有安全基础设施集成。它的设计具有可扩展性和灵活性，允许企业定制框架，以满足其特定需求和要求。</p><p>（通过<a href="https://www.deepl.com/">DeepL</a>翻译）</p></blockquote><p>本文我们将使用其中的<code>Tunnel</code>功能，从外网访问家中内网的服务。对于其WARP代理功能，本文不做讨论。</p><h2 id="你需要"><a href="#你需要" class="headerlink" title="你需要"></a>你需要</h2><div class="tag-plugin checkbox" color="green"><input type="checkbox" checked="true"/><span>一个功能正常的Cloudflare账户</span></div><div class="tag-plugin checkbox" color="green"><input type="checkbox" checked="true"/><span>一个有效的付款方式（Visa / Mastercard /Paypal）</span></div><div class="tag-plugin checkbox" color="green"><input type="checkbox" checked="true"/><span>一个绑定在Cloudflare下的域名</span></div><h2 id="启用Zero-Trust"><a href="#启用Zero-Trust" class="headerlink" title="启用Zero Trust"></a>启用Zero Trust</h2><ul><li>访问<a href="https://one.dash.cloudflare.com/">https://one.dash.cloudflare.com</a></li><li>选择Free计划</li><li>绑定付款方式并填写账单信息</li><li>一切正常的话，你将会看到Zero Trust的控制面板</li></ul><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230225191137594.png" alt="image-20230225191137594" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230225191137594</span></div></div><h2 id="配置内网穿透"><a href="#配置内网穿透" class="headerlink" title="配置内网穿透"></a>配置内网穿透</h2><h3 id="创建隧道"><a href="#创建隧道" class="headerlink" title="创建隧道"></a>创建隧道</h3><p>点击<code>Access -&gt; Tunnels</code>，点击<code>Create a tunnel</code>创建一个隧道</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230225191410406.png" alt="image-20230225191410406" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230225191410406</span></div></div><p>输入名称后继续，提示安装connector</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230225193025132.png" alt="image-20230225193025132" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230225193025132</span></div></div><p>这里以Debian 64-bit和Windows为例</p><h4 id="安装connector（Debian）"><a href="#安装connector（Debian）" class="headerlink" title="安装connector（Debian）"></a>安装connector（Debian）</h4><p>键入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L --output cloudflared.deb https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb &amp;&amp; sudo dpkg -i cloudflared.deb</span><br></pre></td></tr></table></figure><p>若访问<code>github.com</code>过慢可在<code>https://</code>前面添加<code>https://ghproxy.com/</code></p><p>而后：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cloudflared service install [你的Token]</span><br></pre></td></tr></table></figure><p>若运行此命令时出错</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230225192231356.png" alt="image-20230225192231356" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230225192231356</span></div></div><p>则执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cloudflared service uninstall</span><br></pre></td></tr></table></figure><p>而后重新执行<code>cloudflared service install</code>一行即可</p><h4 id="安装connector（Windows）"><a href="#安装connector（Windows）" class="headerlink" title="安装connector（Windows）"></a>安装connector（Windows）</h4><p>下载<a href="https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-windows-amd64.msi">https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-windows-amd64.msi</a>并安装</p><p>在<strong>以管理员权限运行的</strong>cmd &#x2F; Powershell中键入：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cloudflare service install [你的<span class="type">Token</span>]</span><br></pre></td></tr></table></figure><h3 id="进行内网穿透"><a href="#进行内网穿透" class="headerlink" title="进行内网穿透"></a>进行内网穿透</h3><p>按照如图所示进行配置即可</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230225193655754.png" alt="image-20230225193655754" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230225193655754</span></div></div><p>配置完成后，通过<code>https://[你的子域名].[你的域名]/[你的访问路径(如果有的话)]</code>即可访问内网服务</p><h3 id="附：关于对内网HTTPS服务的特殊配置"><a href="#附：关于对内网HTTPS服务的特殊配置" class="headerlink" title="附：关于对内网HTTPS服务的特殊配置"></a>附：关于对内网HTTPS服务的特殊配置</h3><p>由于内网https服务证书一般为未受信任证书，若直接绑定到域名，访问时会提示<code>Bad Gateway</code>，因此需要对穿透的HTTPS做一些配置</p><p>打开<code>Tunnels</code>，点击隧道旁的<code>Configure</code>进入配置界面，选择<code>Public Hostname</code></p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230225194302124.png" alt="image-20230225194302124" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230225194302124</span></div></div><p>选择你要修改的域名，点击<code>Edit</code></p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230225194404224.png" alt="image-20230225194404224" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230225194404224</span></div></div><p>选择<code>Additional application settings -&gt; TLS</code>，将<code>No TLS Verify</code>一项启用</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230225194534026.png" alt="image-20230225194534026" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230225194534026</span></div></div><p>保存后即可正常访问</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;Zero Trust是Cloudflare公司推出的一项企业级虚拟网关服务，官方对其介绍如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3 i</summary>
      
    
    
    
    
    <category term="内网穿透" scheme="https://rickg.cn/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    
    <category term="Cloudflare" scheme="https://rickg.cn/tags/Cloudflare/"/>
    
  </entry>
  
  <entry>
    <title>NAS从入门到Boom① —— 基础环境的配置</title>
    <link href="https://rickg.cn/2023/02/14/nas-from-entry-to-boom-1/"/>
    <id>https://rickg.cn/2023/02/14/nas-from-entry-to-boom-1/</id>
    <published>2023-02-14T11:45:56.000Z</published>
    <updated>2023-05-31T06:58:14.088Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在玩PT，大量的下载使得我硬盘不堪重负，于是改造家里的AIO服务器便提上了日程。因在刷PT时有观看影片转码的需求，遂选购<code>HC320 8T</code>一块，<code>Quadro P400 2G</code>一张。总体配置如下：</p><table><thead><tr><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>CPU</td><td>Xeon X3440 @ 2.53 GHz</td></tr><tr><td>主板</td><td>Supermicro X8SIL-V</td></tr><tr><td>内存</td><td>Kingston ECC UDIMM 2Rx8 8GB</td></tr><tr><td>显卡</td><td>NVIDIA Quadro P400 2GB</td></tr><tr><td>SSD</td><td>Kingston UV400</td></tr><tr><td>HDD</td><td>Western Digital HC320 8TB</td></tr></tbody></table><h3 id="为何选择P400"><a href="#为何选择P400" class="headerlink" title="为何选择P400?"></a>为何选择P400?</h3><blockquote><p>参照：<a href="https://developer.nvidia.com/video-encode-and-decode-gpu-support-matrix-new">https://developer.nvidia.com/video-encode-and-decode-gpu-support-matrix-new</a></p></blockquote><p>根据nv最新的表格显示，P400拥有3路NVENC编码（甚至可以破解），支持H.264，H.265 10-bit等格式，同时对编码也有较好的支持，重点是拆机P400只要￥350，在一众解码卡中显得非常实惠。</p><h2 id="系统安装"><a href="#系统安装" class="headerlink" title="系统安装"></a>系统安装</h2><blockquote><p>由于系统已经安装好了，这里以虚拟机作为演示</p></blockquote><p>在<a href="https://proxmox.com/en/downloads">https://proxmox.com/en/downloads</a>下载安装镜像，用Rufus &#x2F; etcher刻入U盘</p><p>从安装镜像启动，同意用户协议，选择安装磁盘</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230214201346369.png" alt="image-20230214201346369" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230214201346369</span></div></div><p>选择正确的时区</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230214201448024.png" alt="image-20230214201448024" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230214201448024</span></div></div><p>配置密码</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230214201520389.png" alt="image-20230214201520389" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230214201520389</span></div></div><p>配置IP地址</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230214201612459.png" alt="image-20230214201612459" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230214201612459</span></div></div><p>安装完成后重启，浏览器访问<code>https://[你配置的IP]:8006</code>进入PVE管理界面</p><h2 id="删除local-lvm并合并"><a href="#删除local-lvm并合并" class="headerlink" title="删除local-lvm并合并"></a>删除local-lvm并合并</h2><p>PVE在默认情况下会将系统盘分为<code>local</code>和<code>local-lvm</code>两个分区，在实际使用的时候往往其中一个不够用了另一个还很空的情况，一般来说在安装完成后将<code>local-lvm</code>合并入<code>local</code>，方便自己管理</p><ol><li><p>以root登录后台，点击左边的节点，选择<code>Shell</code>，键入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lvremove pve/data</span><br></pre></td></tr></table></figure><p>输入y确认</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230214202932879.png" alt="image-20230214202932879" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230214202932879</span></div></div></li><li><p>键入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lvextend -l +100%FREE -r pve/root</span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230214202946857.png" alt="image-20230214202946857" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230214202946857</span></div></div></li><li><p>在<code>数据中心 - 存储</code>中删除<code>local-lvm</code>，并编辑<code>local</code>，在内容一项中勾选所有可选项。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230214203203190.png" alt="image-20230214203203190" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230214203203190</span></div></div></li></ol><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230214203243004.png" alt="image-20230214203243004" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230214203243004</span></div></div><h2 id="配置HDD"><a href="#配置HDD" class="headerlink" title="配置HDD"></a>配置HDD</h2><p>点击左侧的节点，选择<code>磁盘</code></p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230214203357076.png" alt="image-20230214203357076" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230214203357076</span></div></div><p>选择<code>/dev/sdb</code>，点击<code>使用GPT初始化磁盘</code></p><h3 id="使用zfs"><a href="#使用zfs" class="headerlink" title="使用zfs"></a>使用zfs</h3><p>点击<code>ZFS</code> - <code>创建：ZFS</code>，输入名称，选择设备，创建完成</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230214203913553.png" alt="image-20230214203913553" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230214203913553</span></div></div><h3 id="不使用zfs"><a href="#不使用zfs" class="headerlink" title="不使用zfs"></a>不使用zfs</h3><p>点击<code>目录</code> - <code>创建：目录</code>，输入名称，选择文件系统，创建完成</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230214204017067.png" alt="image-20230214204017067" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230214204017067</span></div></div><h2 id="配置软件源"><a href="#配置软件源" class="headerlink" title="配置软件源"></a>配置软件源</h2><h3 id="替换apt软件源"><a href="#替换apt软件源" class="headerlink" title="替换apt软件源"></a>替换apt软件源</h3><p>替换前建议先更新下证书，否则可能由于证书不可用导致 https 无法使用，进而无法下载所有软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install apt-transport-https ca-certificates</span><br></pre></td></tr></table></figure><p>编辑<code>/etc/apt/sources.list</code></p><p>将原有内容替换为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">deb https://mirrors.ustc.edu.cn/debian/ bullseye main contrib non-free</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/debian/ bullseye main contrib non-free</span><br><span class="line"></span><br><span class="line">deb https://mirrors.ustc.edu.cn/debian/ bullseye-updates main contrib non-free</span><br><span class="line"></span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/debian/ bullseye-updates main contrib non-free</span><br><span class="line"></span><br><span class="line">deb https://mirrors.ustc.edu.cn/debian/ bullseye-backports main contrib non-free</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/debian/ bullseye-backports main contrib non-free</span><br><span class="line"></span><br><span class="line">deb https://mirrors.ustc.edu.cn/debian-security bullseye-security main contrib non-free</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/debian-security bullseye-security main contrib non-free</span><br></pre></td></tr></table></figure><h3 id="禁用PVE企业源"><a href="#禁用PVE企业源" class="headerlink" title="禁用PVE企业源"></a>禁用PVE企业源</h3><p>编辑<code>/etc/apt/sources.list.d/pve-enterprise.list</code>，将其中内容替换为如下以禁用企业源：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deb https://mirrors.ustc.edu.cn/proxmox/debian bullseye pve-no-subscription</span><br></pre></td></tr></table></figure><h3 id="修改LXC容器源"><a href="#修改LXC容器源" class="headerlink" title="修改LXC容器源"></a>修改LXC容器源</h3><p>编辑<code>/usr/share/perl5/PVE/APLInfo.pm</code>，将第200行中<code>http://download.proxmox.com/images</code>替换为<code>https://mirrors.ustc.edu.cn/proxmox/images</code>即可，重启<code>pvedaemon</code>服务后生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart pvedaemon.service</span><br></pre></td></tr></table></figure><h2 id="配置显卡"><a href="#配置显卡" class="headerlink" title="配置显卡"></a>配置显卡</h2><h3 id="前置工作"><a href="#前置工作" class="headerlink" title="前置工作"></a>前置工作</h3><p>查看机器上识别到的NVIDIA GPU</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lspci | grep -i nvidia</span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230214211305042.png" alt="image-20230214211305042" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230214211305042</span></div></div><p>安装内核头文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看内核版本号</span></span><br><span class="line">root@pve-sample:~<span class="comment"># uname -r</span></span><br><span class="line">5.15.74-1-pve</span><br><span class="line"><span class="comment"># 安装对应版本的头文件</span></span><br><span class="line">root@pve-sample:~<span class="comment"># apt install pve-headers-5.15.74-1-pve</span></span><br></pre></td></tr></table></figure><p>安装编译环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install gcc make</span><br></pre></td></tr></table></figure><h3 id="禁用开源驱动"><a href="#禁用开源驱动" class="headerlink" title="禁用开源驱动"></a>禁用开源驱动</h3><p>Linux默认会自带一个nv开源驱动（nouveau），此驱动与官方驱动冲突，必须将其禁用。</p><p>查看是否在使用nouveau：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsmod | grep nouveau</span><br></pre></td></tr></table></figure><p>如有使用，创建配置文件禁用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/modprobe.d/blacklist-nouveau.conf</span><br></pre></td></tr></table></figure><p>写入以下内容后保存退出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">blacklist nouveau</span><br><span class="line">options nouveau modeset=0</span><br></pre></td></tr></table></figure><p>更新内核initramfs文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update-initramfs -u</span><br></pre></td></tr></table></figure><p>重启后生效。可以输入<code>lsmod | grep nouveau</code>验证</p><h3 id="安装官方驱动"><a href="#安装官方驱动" class="headerlink" title="安装官方驱动"></a>安装官方驱动</h3><blockquote><p>下载地址：<a href="https://www.nvidia.cn/Download/index.aspx?lang=cn">https://www.nvidia.cn/Download/index.aspx?lang=cn</a></p></blockquote><p>前往nvidia官网下载驱动</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230214212406811.png" alt="image-20230214212406811" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230214212406811</span></div></div><p>下载并安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://cn.download.nvidia.com/XFree86/Linux-x86_64/525.89.02/NVIDIA-Linux-x86_64-525.89.02.run</span><br><span class="line"><span class="built_in">chmod</span> +x NVIDIA-Linux-x86_64-525.89.02.run</span><br><span class="line">./NVIDIA-Linux-x86_64-525.89.02.run</span><br></pre></td></tr></table></figure><p>一路回车即可</p><p>安装完毕后，重启服务器，输入<code>nvidia-smi</code>查看信息：</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230214212708263.png" alt="image-20230214212708263" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230214212708263</span></div></div><h3 id="破解编码线程数限制"><a href="#破解编码线程数限制" class="headerlink" title="破解编码线程数限制"></a>破解编码线程数限制</h3><p>在上面的表格中我们可以知道，万恶的黄🐶（f**k u nvidia）将所有消费级显卡和低端专业卡的编码线程数限制在3个线程（4090也不能同时开4个编码任务）。所幸有大神开发出了破解工具，可以一键解除黄🐶的限制。</p><blockquote><p>项目主页：<a href="https://github.com/keylase/nvidia-patch">https://github.com/keylase/nvidia-patch</a></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://ghproxy.com/https://raw.githubusercontent.com/keylase/nvidia-patch/master/patch.sh</span><br><span class="line"><span class="built_in">chmod</span> +x patch.sh</span><br><span class="line">./patch.sh</span><br></pre></td></tr></table></figure><p>破解完成后，运行<code>nvidia-smi</code>检查GPU和驱动是否有错误。此外，可以通过<code>ffmpeg</code>来测试是否可以无限制编码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -y -vsync 0 -hwaccel cuda -hwaccel_output_format cuda \</span><br><span class="line">-f lavfi -i testsrc -t 50 \</span><br><span class="line">-vf hwupload -c:a copy -c:v h264_nvenc -b:v 4M -f null - \</span><br><span class="line">-vf hwupload -c:a copy -c:v h264_nvenc -b:v 1M -f null - \</span><br><span class="line">-vf hwupload -c:a copy -c:v h264_nvenc -b:v 8M -f null - \</span><br><span class="line">-vf hwupload -c:a copy -c:v h264_nvenc -b:v 6M -f null -  </span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230214214429533.png" alt="image-20230214214429533" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230214214429533</span></div></div><h3 id="打开驱动持久模式"><a href="#打开驱动持久模式" class="headerlink" title="打开驱动持久模式"></a>打开驱动持久模式</h3><blockquote><p>参考：<a href="https://www.reddit.com/r/PleX/comments/q0cbh9/quadro_p400_transcoding_information/">https://www.reddit.com/r/PleX/comments/q0cbh9/quadro_p400_transcoding_information/</a></p></blockquote><p>这将使GPU驱动长时间加载，对于我的P400，实测可以在播放4K HDR视频时更流畅（不如说原来播放时就一卡一卡的）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvidia-smi -pm 1</span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230214214221730.png" alt="image-20230214214221730" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230214214221730</span></div></div><h2 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h2><h3 id="zsh"><a href="#zsh" class="headerlink" title="zsh"></a>zsh</h3><h4 id="安装zsh"><a href="#安装zsh" class="headerlink" title="安装zsh"></a>安装zsh</h4><p>zsh作为一个极其好用的shell，是必须安装的（</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 Zsh</span></span><br><span class="line">apt install zsh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将 Zsh 设置为默认 Shell</span></span><br><span class="line">chsh -s /bin/zsh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 Oh My Zsh</span></span><br><span class="line">wget https://ghproxy.com/https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh</span><br></pre></td></tr></table></figure><h4 id="配置zsh"><a href="#配置zsh" class="headerlink" title="配置zsh"></a>配置zsh</h4><h5 id="必备插件"><a href="#必备插件" class="headerlink" title="必备插件"></a>必备插件</h5><h6 id="zsh-autosuggestions"><a href="#zsh-autosuggestions" class="headerlink" title="zsh-autosuggestions"></a>zsh-autosuggestions</h6><p>历史命令建议插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://ghproxy.com/https://github.com/zsh-users/zsh-autosuggestions <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions</span><br></pre></td></tr></table></figure><h6 id="zsh-syntax-highlighting"><a href="#zsh-syntax-highlighting" class="headerlink" title="zsh-syntax-highlighting"></a>zsh-syntax-highlighting</h6><p>语法高亮插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://ghproxy.com/https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting</span><br></pre></td></tr></table></figure><h5 id="配置-x2F-zshrc"><a href="#配置-x2F-zshrc" class="headerlink" title="配置~&#x2F;.zshrc"></a>配置~&#x2F;.zshrc</h5><p>将<code>plugins=(git)</code>修改为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">plugins=(</span><br><span class="line">        git</span><br><span class="line">        extract</span><br><span class="line">        zsh-autosuggestions</span><br><span class="line">        zsh-syntax-highlighting</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>完成后切换到zsh，zsh应该是这个样子的：</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230214215532887.png" alt="image-20230214215532887" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230214215532887</span></div></div><h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><h4 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h4><p>使用官方一键脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span><br></pre></td></tr></table></figure><h4 id="配置Docker"><a href="#配置Docker" class="headerlink" title="配置Docker"></a>配置Docker</h4><h5 id="切换到国内源"><a href="#切换到国内源" class="headerlink" title="切换到国内源"></a>切换到国内源</h5><p>编辑<code>/etc/docker/daemon.json</code>（若不存在请新建）：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;https://docker.mirrors.ustc.edu.cn/&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>然后：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h5 id="为docker容器启用IPv6"><a href="#为docker容器启用IPv6" class="headerlink" title="为docker容器启用IPv6"></a>为docker容器启用IPv6</h5><p>因个人原因，需要Docker中的BT软件能访问IPv6，而docker默认是不启用IPv6的，需要手动开启</p><p>编辑<code>/etc/docker/daemon.json</code>：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;https://docker.mirrors.ustc.edu.cn/&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;experimental&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ip6tables&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ipv6&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;fixed-cidr-v6&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fd00::/80&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>重启Docker：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><p>查看Docker容器的IPv6状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network inspect bridge</span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20230214221048210.png" alt="image-20230214221048210" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20230214221048210</span></div></div><h5 id="安装Portainer"><a href="#安装Portainer" class="headerlink" title="安装Portainer"></a>安装Portainer</h5><p>Portainer是一个优秀的容器管理器，用它我们可以轻易的创建 &#x2F; 管理Docker容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建Portainer数据卷</span></span><br><span class="line">docker volume create portainer_data</span><br><span class="line"><span class="comment"># 安装Portainer</span></span><br><span class="line">docker run -d -p 8000:8000 -p 9443:9443 -p 9000:9000 --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce:latest</span><br></pre></td></tr></table></figure><p>安装完成后，通过<code>http://[服务器ip]:9000</code>或<code>https://[服务器ip]:9443</code>访问Portainer管理界面</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近在玩PT，大量的下载使得我硬盘不堪重负，于是改造家里的AIO服务器便提上了日程。因在刷PT时有观看影片转码的需求，遂选购&lt;code&gt;HC</summary>
      
    
    
    
    
    <category term="nas" scheme="https://rickg.cn/tags/nas/"/>
    
    <category term="pve" scheme="https://rickg.cn/tags/pve/"/>
    
    <category term="docker" scheme="https://rickg.cn/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Arma 3 获取与分析导弹数据</title>
    <link href="https://rickg.cn/2022/11/25/arma3-get-and-analyze-missile-data/"/>
    <id>https://rickg.cn/2022/11/25/arma3-get-and-analyze-missile-data/</id>
    <published>2022-11-25T08:35:44.000Z</published>
    <updated>2023-02-18T03:39:53.134Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在研究Arma 3的SQF脚本，心想要是能收集一些游戏基础数据就好了，于是就有了这个项目。</p><h2 id="所需Mod"><a href="#所需Mod" class="headerlink" title="所需Mod"></a>所需Mod</h2><p><strong>FileXT</strong></p><p><strong>3den Enhanced</strong>（打开任务场景时需要）</p><h2 id="制作流程"><a href="#制作流程" class="headerlink" title="制作流程"></a>制作流程</h2><h3 id="1-创建任务文件"><a href="#1-创建任务文件" class="headerlink" title="1. 创建任务文件"></a>1. 创建任务文件</h3><p>打开任务编辑器，创建一个空场景。</p><p>在场景内放置<code>步枪兵 (未武装)</code> x 1，类名为 <code>B_Soldier_unarmed_F</code></p><p>在场景内放置<code>野营桌</code>若干 (要测试几种导弹就放几个)，类名为 <code>Land_CampingTable_F</code></p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20221125152852400.png" alt="image-20221125152852400" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20221125152852400</span></div></div><p>打开任务所在文件夹，路径为：<code>文档 -&gt; Arma 3 - Other Profiles -&gt; 你的 ID -&gt; missions -&gt; 任务名</code></p><p>创建<code>Description.ext</code>文件，输入：</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">class CfgFunctions</span><br><span class="line">&#123;</span><br><span class="line">class rickg</span><br><span class="line">&#123;</span><br><span class="line">class Utilities</span><br><span class="line">&#123;</span><br><span class="line">class missileTrack &#123;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line">&#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>创建<code>Functions</code>文件夹，并在其中创建<code>Utilities</code>文件夹</p><p>在<code>Utilities</code>文件夹中创建<code>fn_missileTrack.sqf</code>文件</p><h3 id="2-编写相关脚本"><a href="#2-编写相关脚本" class="headerlink" title="2. 编写相关脚本"></a>2. 编写相关脚本</h3><p>在任务编辑器中双击<code>野营桌</code>，打开属性编辑页面。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20221125153845020.png" alt="image-20221125153845020" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20221125153845020</span></div></div><p>在<code>初始化</code>一栏中填入以下脚本：</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="variable">_position</span> = <span class="built_in">getPos</span> this; <span class="comment">// 获取桌子当前位置</span></span><br><span class="line"><span class="variable">_position</span> <span class="built_in">set</span> [<span class="number">2</span>, (<span class="variable">_position</span> <span class="built_in">select</span> <span class="number">2</span>) + <span class="number">1.3</span>]; <span class="comment">// 使导弹悬浮在桌子上方</span></span><br><span class="line"><span class="keyword">private</span> <span class="variable">_missile</span>; </span><br><span class="line"><span class="keyword">private</span> <span class="variable">_missileType</span> = <span class="string">&quot;PylonMissile_1Rnd_Missile_AA_04_F&quot;</span>; <span class="comment">// 这里和下面的_missileType为CfgMagazines中的导弹类型，可在配置查看器中查看</span></span><br><span class="line"><span class="variable">_missile</span> = <span class="built_in">createVehicle</span> [<span class="built_in">getText</span> (<span class="built_in">configFile</span> &gt;&gt; <span class="string">&quot;CfgMagazines&quot;</span> &gt;&gt; <span class="variable">_missileType</span> &gt;&gt; <span class="string">&quot;ammo&quot;</span>), <span class="variable">_position</span>, [], <span class="number">0</span>, <span class="string">&quot;CAN_COLLIDE&quot;</span>]; </span><br><span class="line">[<span class="variable">_missile</span>, [<span class="number">225.103</span>, <span class="number">0</span>, <span class="number">0</span>]] <span class="built_in">call</span> <span class="title">BIS_fnc_setObjectRotation</span>; <span class="comment">// 这行的225.103按你摆放桌子的方向来</span></span><br><span class="line"><span class="variable">_missile</span> <span class="built_in">enableSimulation</span> <span class="literal">false</span>; <span class="comment">// 禁用模拟，使导弹静止</span></span><br><span class="line">this <span class="built_in">addAction</span> [<span class="built_in">format</span> [<span class="string">&quot;测试 %1&quot;</span>, <span class="built_in">getText</span> (<span class="built_in">configFile</span> &gt;&gt; <span class="string">&quot;CfgMagazines&quot;</span> &gt;&gt; <span class="variable">_missileType</span> &gt;&gt; <span class="string">&quot;displayName&quot;</span>)], &#123; </span><br><span class="line"><span class="keyword">private</span> <span class="variable">_missileType</span> = <span class="string">&quot;PylonMissile_1Rnd_Missile_AA_04_F&quot;</span>; </span><br><span class="line">[<span class="variable">_missileType</span>] <span class="built_in">call</span> <span class="title">rickg_fnc_missileTrack</span>; </span><br><span class="line">&#125;]; <span class="comment">// 添加测试导弹的选项，这里使用了读取CfgMagazines动态获取导弹名</span></span><br></pre></td></tr></table></figure><p>打开任务路径下的<code>Functions/Utilities</code>文件夹</p><p>编辑<code>fn_missileTrack.sqf</code>：</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">params</span> [<span class="string">&quot;_type&quot;</span>];</span><br><span class="line">[<span class="variable">_type</span>] <span class="built_in">spawn</span> &#123;</span><br><span class="line"><span class="built_in">params</span> [<span class="string">&quot;_type&quot;</span>]; <span class="comment">// 获取参数</span></span><br><span class="line"><span class="variable">_typePlayer</span> = <span class="built_in">player</span>;</span><br><span class="line"><span class="variable">_positionMissile</span> = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1000</span>]; <span class="comment">// 设置导弹，跟踪无人机初始坐标为[0, 0, 1000]</span></span><br><span class="line"><span class="variable">_positionDrone</span> = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1000</span>];</span><br><span class="line"><span class="variable">_missile</span> = <span class="built_in">createVehicle</span> [<span class="built_in">getText</span> (<span class="built_in">configFile</span> &gt;&gt; <span class="string">&quot;CfgMagazines&quot;</span> &gt;&gt; <span class="variable">_type</span> &gt;&gt; <span class="string">&quot;ammo&quot;</span>), <span class="variable">_positionMissile</span>]; <span class="comment">// 创建导弹实体</span></span><br><span class="line"><span class="variable">_launchTime</span> = <span class="built_in">time</span>;</span><br><span class="line"><span class="variable">_UAV</span> = <span class="built_in">createVehicle</span> [<span class="string">&quot;B_UAV_01_F&quot;</span>, <span class="variable">_positionDrone</span>, [], <span class="number">0</span>, <span class="string">&quot;CAN_COLLIDE&quot;</span>]; <span class="comment">// 创建无人机实体</span></span><br><span class="line"><span class="variable">_UAV</span> <span class="built_in">attachTo</span> [<span class="variable">_missile</span>, [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>]]; <span class="comment">// 将无人机附属在导弹上</span></span><br><span class="line"><span class="variable">_UAV</span> <span class="built_in">engineOn</span> <span class="literal">false</span>;</span><br><span class="line"><span class="variable">_UAV</span> <span class="built_in">setFuel</span> <span class="number">0</span>;</span><br><span class="line"><span class="variable">_UAV</span> <span class="built_in">allowDamage</span> <span class="literal">false</span>; <span class="comment">// 禁用无人机损害</span></span><br><span class="line"><span class="built_in">hideObject</span> <span class="variable">_UAV</span>; <span class="comment">// 隐藏无人机模型</span></span><br><span class="line"><span class="built_in">createVehicleCrew</span> <span class="variable">_UAV</span>;</span><br><span class="line"><span class="built_in">gunner</span> <span class="variable">_UAV</span> <span class="built_in">allowDamage</span> <span class="literal">false</span>; <span class="comment">// 禁用无人机损害</span></span><br><span class="line"><span class="built_in">selectPlayer</span> <span class="built_in">gunner</span> <span class="variable">_UAV</span>; <span class="comment">// 将玩家视角移动到无人机上</span></span><br><span class="line"><span class="comment">// FileXT 获取文件名</span></span><br><span class="line"><span class="keyword">private</span> <span class="variable">_fileName_Time</span> = <span class="built_in">getText</span> (<span class="built_in">configFile</span> &gt;&gt; <span class="string">&quot;CfgMagazines&quot;</span> &gt;&gt; <span class="variable">_type</span> &gt;&gt; <span class="string">&quot;displayName&quot;</span>) + <span class="string">&quot;_Time.txt&quot;</span>;</span><br><span class="line">[<span class="variable">_fileName_Time</span>] <span class="built_in">call</span> <span class="title">filext_fnc_deleteFile</span>; <span class="comment">// 删除旧文件</span></span><br><span class="line">[<span class="variable">_fileName_Time</span>] <span class="built_in">call</span> <span class="title">filext_fnc_open</span>; <span class="comment">// 打开文件</span></span><br><span class="line"><span class="keyword">private</span> <span class="variable">_fileName_Dist</span> = <span class="built_in">getText</span> (<span class="built_in">configFile</span> &gt;&gt; <span class="string">&quot;CfgMagazines&quot;</span> &gt;&gt; <span class="variable">_type</span> &gt;&gt; <span class="string">&quot;displayName&quot;</span>) + <span class="string">&quot;_Dist.txt&quot;</span>;</span><br><span class="line">[<span class="variable">_fileName_Dist</span>] <span class="built_in">call</span> <span class="title">filext_fnc_deleteFile</span>;</span><br><span class="line">[<span class="variable">_fileName_Dist</span>] <span class="built_in">call</span> <span class="title">filext_fnc_open</span>;</span><br><span class="line"><span class="keyword">while</span> &#123;<span class="built_in">alive</span> <span class="variable">_missile</span>&#125; <span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">hintSilent</span> <span class="built_in">format</span> [<span class="string">&quot;型号: %1\n速度: %2 km/h\n高度变化: %3 m\n飞行距离: %4 m\n飞行时间: %5 s&quot;</span>, <span class="built_in">getText</span> (<span class="built_in">configFile</span> &gt;&gt; <span class="string">&quot;CfgMagazines&quot;</span> &gt;&gt; <span class="variable">_type</span> &gt;&gt; <span class="string">&quot;displayName&quot;</span>), <span class="built_in">speed</span> <span class="variable">_missile</span>, (<span class="built_in">getPos</span> <span class="variable">_missile</span> <span class="built_in">select</span> <span class="number">2</span>) - <span class="number">1000</span>, <span class="variable">_positionMissile</span> <span class="built_in">distance</span> <span class="built_in">getPos</span> <span class="variable">_missile</span>, <span class="built_in">time</span> - <span class="variable">_launchTime</span>]; <span class="comment">// 输出速度、高度变化、飞行距离等相关信息</span></span><br><span class="line"></span><br><span class="line">[<span class="variable">_fileName_Time</span>, <span class="built_in">str</span>(<span class="built_in">time</span> - <span class="variable">_launchTime</span>), <span class="built_in">str</span>(<span class="built_in">speed</span> <span class="variable">_missile</span>)] <span class="built_in">call</span> <span class="title">filext_fnc_set</span>; <span class="comment">// 添加键值到待写入项</span></span><br><span class="line">[<span class="variable">_fileName_Dist</span>, <span class="built_in">str</span>(<span class="variable">_positionMissile</span> <span class="built_in">distance</span> <span class="built_in">getPos</span> <span class="variable">_missile</span>), <span class="built_in">str</span>((<span class="built_in">getPos</span> <span class="variable">_missile</span> <span class="built_in">select</span> <span class="number">2</span>) - <span class="number">1000</span>)] <span class="built_in">call</span> <span class="title">filext_fnc_set</span>;</span><br><span class="line">&#125;;</span><br><span class="line">[<span class="variable">_fileName_Time</span>] <span class="built_in">call</span> <span class="title">filext_fnc_write</span>; <span class="comment">// 写入到文件</span></span><br><span class="line">[<span class="variable">_fileName_Dist</span>] <span class="built_in">call</span> <span class="title">filext_fnc_write</span>;</span><br><span class="line">[<span class="variable">_fileName_Time</span>] <span class="built_in">call</span> <span class="title">filext_fnc_close</span>; <span class="comment">// 关闭文件流</span></span><br><span class="line">[<span class="variable">_fileName_Dist</span>] <span class="built_in">call</span> <span class="title">filext_fnc_close</span>;</span><br><span class="line"><span class="built_in">selectPlayer</span> <span class="variable">_typePlayer</span>; <span class="comment">// 切换回玩家</span></span><br><span class="line"><span class="built_in">deleteVehicle</span> <span class="variable">_UAV</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="3-测试"><a href="#3-测试" class="headerlink" title="3. 测试"></a>3. 测试</h3><p>挂载<strong>FileXT</strong> Mod，运行任务，导弹测试结果应该如下图</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20221125155345765.png" alt="image-20221125155345765" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20221125155345765</span></div></div><p>测试完成后，打开<code>Arma3安装目录/!Workshop/@FileXT/storage</code>文件夹，可以发现生成了<code>导弹名_Time.txt</code>和<code>导弹名_Dist.txt</code>两个文件</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20221125155841329.png" alt="image-20221125155841329" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20221125155841329</span></div></div><h3 id="4-整理数据文件"><a href="#4-整理数据文件" class="headerlink" title="4. 整理数据文件"></a>4. 整理数据文件</h3><p>用Visual Studio Code打开数据文件，可以发现有大量特殊符号，这是FileXT模组的存储模式导致的（详见<a href="https://github.com/Vindicta-Team/FileXT/wiki">https://github.com/Vindicta-Team/FileXT/wiki</a>）</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20221125160355097.png" alt="image-20221125160355097" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20221125160355097</span></div></div><p>打开侧边栏的<code>搜索</code>一项，点击搜索框中的第三个图标启用正则表达式，而后将<code>f.*\u0001\u0000&#123;3&#125;</code>替换为空白，去掉文件开头的特殊符号</p><p>再将<code>(.)\u0000(.)</code>替换为<code>$1,$2</code>，替换掉两个数字之间的<code>NUL</code></p><p>而后将剩下的<code>\u0000</code>替换为空白，这样所有特殊符号就被消除了</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20221125161100799.png" alt="image-20221125161100799" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20221125161100799</span></div></div><p>在两个文件中搜索<code>&quot;1000&quot;,0</code>的无效数据项，将其删除</p><p>在两个文件中搜索<code>&quot;a&quot;,0</code>的无效数据项，将其删除（a的值与导弹飞行的时间相似）</p><h3 id="5-分析数据文件并导出为图片"><a href="#5-分析数据文件并导出为图片" class="headerlink" title="5. 分析数据文件并导出为图片"></a>5. 分析数据文件并导出为图片</h3><p>新建一个文件夹，在其下创建processData.py，内容如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dirProcess</span>(<span class="params">fileList: <span class="built_in">list</span>, missileType: <span class="built_in">str</span></span>):</span><br><span class="line">    fileListTime = []</span><br><span class="line">    fileListDist = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> fileList:</span><br><span class="line">        <span class="keyword">if</span> (re.search(<span class="string">&#x27;.*_Time.txt&#x27;</span>, i) != <span class="literal">None</span>):</span><br><span class="line">            fileListTime.append(re.search(<span class="string">&#x27;.*_Time.txt&#x27;</span>, i).group())</span><br><span class="line">        <span class="keyword">if</span> (re.search(<span class="string">&#x27;.*_Dist.txt&#x27;</span>, i) != <span class="literal">None</span>):</span><br><span class="line">            fileListDist.append(re.search(<span class="string">&#x27;.*_Dist.txt&#x27;</span>, i).group())</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> fileListTime:</span><br><span class="line">        dataFrame = pd.read_table(</span><br><span class="line">            <span class="string">&#x27;./导弹飞行数据/&#x27;</span> + missileType + <span class="string">&#x27;/&#x27;</span> + i, sep=<span class="string">&#x27;,&#x27;</span>, header=<span class="literal">None</span>)</span><br><span class="line">        dataFrame = dataFrame.sort_values(by=<span class="number">0</span>)</span><br><span class="line">        x = []</span><br><span class="line">        y = []</span><br><span class="line">        <span class="keyword">for</span> index, row <span class="keyword">in</span> dataFrame.iterrows():</span><br><span class="line">            x.append(row[<span class="number">0</span>])</span><br><span class="line">            y.append(row[<span class="number">1</span>])</span><br><span class="line">        figTime = plt.figure()</span><br><span class="line">        ax = figTime.add_axes([<span class="number">0.12</span>, <span class="number">0.12</span>, <span class="number">0.8</span>, <span class="number">0.8</span>])</span><br><span class="line">        ax.grid(<span class="literal">True</span>)</span><br><span class="line">        ax.plot(x, y)</span><br><span class="line">        ax.set_xlabel(<span class="string">&quot;飞行时间 (s)&quot;</span>)</span><br><span class="line">        ax.set_ylabel(<span class="string">&quot;速度 (km/h)&quot;</span>)</span><br><span class="line">        ax.set_title(i.split(<span class="string">&#x27;_&#x27;</span>)[<span class="number">0</span>] + <span class="string">&quot;导弹数据&quot;</span>)</span><br><span class="line">        plt.savefig(<span class="string">&#x27;./导弹飞行数据/图片/&#x27;</span> + missileType + <span class="string">&#x27;/&#x27;</span> + i.split(<span class="string">&#x27;_&#x27;</span>)</span><br><span class="line">                    [<span class="number">0</span>] + <span class="string">&quot;导弹数据_时间-速度.png&quot;</span>, dpi=<span class="number">288</span>)</span><br><span class="line">        plt.close()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> fileListDist:</span><br><span class="line">        dataFrame = pd.read_table(</span><br><span class="line">            <span class="string">&#x27;./导弹飞行数据/&#x27;</span> + missileType + <span class="string">&#x27;/&#x27;</span> + i, sep=<span class="string">&#x27;,&#x27;</span>, header=<span class="literal">None</span>)</span><br><span class="line">        dataFrame = dataFrame.sort_values(by=<span class="number">0</span>)</span><br><span class="line">        x = []</span><br><span class="line">        y = []</span><br><span class="line">        <span class="keyword">for</span> index, row <span class="keyword">in</span> dataFrame.iterrows():</span><br><span class="line">            x.append(row[<span class="number">0</span>])</span><br><span class="line">            y.append(row[<span class="number">1</span>])</span><br><span class="line">        figDist = plt.figure()</span><br><span class="line">        ax = figDist.add_axes([<span class="number">0.12</span>, <span class="number">0.12</span>, <span class="number">0.8</span>, <span class="number">0.8</span>])</span><br><span class="line">        ax.grid(<span class="literal">True</span>)</span><br><span class="line">        ax.plot(x, y)</span><br><span class="line">        ax.set_xlabel(<span class="string">&quot;飞行距离 (m)&quot;</span>)</span><br><span class="line">        ax.set_ylabel(<span class="string">&quot;相对高度 (m)&quot;</span>)</span><br><span class="line">        ax.set_title(i.split(<span class="string">&#x27;_&#x27;</span>)[<span class="number">0</span>] + <span class="string">&quot;导弹数据&quot;</span>)</span><br><span class="line">        plt.savefig(<span class="string">&#x27;./导弹飞行数据/图片/&#x27;</span> + missileType + <span class="string">&#x27;/&#x27;</span> + i.split(<span class="string">&#x27;_&#x27;</span>)</span><br><span class="line">                    [<span class="number">0</span>] + <span class="string">&quot;导弹数据_距离-高度.png&quot;</span>, dpi=<span class="number">288</span>)</span><br><span class="line">        plt.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dirProcessinAll</span>(<span class="params">fileList: <span class="built_in">list</span>, missileType: <span class="built_in">str</span></span>):</span><br><span class="line">    fileListTime = []</span><br><span class="line">    fileListDist = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> fileList:</span><br><span class="line">        <span class="keyword">if</span> (re.search(<span class="string">&#x27;.*_Time.txt&#x27;</span>, i) != <span class="literal">None</span>):</span><br><span class="line">            fileListTime.append(re.search(<span class="string">&#x27;.*_Time.txt&#x27;</span>, i).group())</span><br><span class="line">        <span class="keyword">if</span> (re.search(<span class="string">&#x27;.*_Dist.txt&#x27;</span>, i) != <span class="literal">None</span>):</span><br><span class="line">            fileListDist.append(re.search(<span class="string">&#x27;.*_Dist.txt&#x27;</span>, i).group())</span><br><span class="line">    figure, axes = plt.subplots(<span class="number">1</span>, <span class="number">2</span>, figsize=(<span class="number">38.4</span>, <span class="number">10.8</span>), dpi=<span class="number">200</span>)</span><br><span class="line">    labels_time = []</span><br><span class="line">    labels_dist = []</span><br><span class="line">    axes[<span class="number">0</span>].set_xlabel(<span class="string">&quot;飞行时间 (s)&quot;</span>)</span><br><span class="line">    axes[<span class="number">0</span>].set_ylabel(<span class="string">&quot;速度 (km/h)&quot;</span>)</span><br><span class="line">    axes[<span class="number">0</span>].set_title(missileType + <span class="string">&quot; 时间 - 速度 表&quot;</span>)</span><br><span class="line">    axes[<span class="number">0</span>].grid(<span class="literal">True</span>)</span><br><span class="line">    axes[<span class="number">1</span>].set_xlabel(<span class="string">&quot;飞行距离 (m)&quot;</span>)</span><br><span class="line">    axes[<span class="number">1</span>].set_ylabel(<span class="string">&quot;相对高度 (m)&quot;</span>)</span><br><span class="line">    axes[<span class="number">1</span>].set_title(missileType + <span class="string">&quot; 距离 - 高度 表&quot;</span>)</span><br><span class="line">    axes[<span class="number">1</span>].grid(<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> fileListTime:</span><br><span class="line">        dataFrame = pd.read_table(</span><br><span class="line">            <span class="string">&#x27;./导弹飞行数据/&#x27;</span> + missileType + <span class="string">&#x27;/&#x27;</span> + i, sep=<span class="string">&#x27;,&#x27;</span>, header=<span class="literal">None</span>)</span><br><span class="line">        dataFrame = dataFrame.sort_values(by=<span class="number">0</span>)</span><br><span class="line">        x = []</span><br><span class="line">        y = []</span><br><span class="line">        <span class="keyword">for</span> index, row <span class="keyword">in</span> dataFrame.iterrows():</span><br><span class="line">            x.append(row[<span class="number">0</span>])</span><br><span class="line">            y.append(row[<span class="number">1</span>])</span><br><span class="line">        axes[<span class="number">0</span>].plot(x, y)</span><br><span class="line">        labels_time.append(i.split(<span class="string">&#x27;_&#x27;</span>)[<span class="number">0</span>])</span><br><span class="line">    axes[<span class="number">0</span>].legend(<span class="built_in">tuple</span>(labels_time), loc=<span class="string">&#x27;best&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> fileListDist:</span><br><span class="line">        dataFrame = pd.read_table(</span><br><span class="line">            <span class="string">&#x27;./导弹飞行数据/&#x27;</span> + missileType + <span class="string">&#x27;/&#x27;</span> + i, sep=<span class="string">&#x27;,&#x27;</span>, header=<span class="literal">None</span>)</span><br><span class="line">        dataFrame = dataFrame.sort_values(by=<span class="number">0</span>)</span><br><span class="line">        x = []</span><br><span class="line">        y = []</span><br><span class="line">        <span class="keyword">for</span> index, row <span class="keyword">in</span> dataFrame.iterrows():</span><br><span class="line">            x.append(row[<span class="number">0</span>])</span><br><span class="line">            y.append(row[<span class="number">1</span>])</span><br><span class="line">        axes[<span class="number">1</span>].plot(x, y)</span><br><span class="line">        labels_dist.append(i.split(<span class="string">&#x27;_&#x27;</span>)[<span class="number">0</span>])</span><br><span class="line">    axes[<span class="number">1</span>].legend(<span class="built_in">tuple</span>(labels_dist), loc=<span class="string">&#x27;best&#x27;</span>)</span><br><span class="line">    <span class="comment"># plt.show()</span></span><br><span class="line">    plt.savefig(<span class="string">&#x27;./导弹飞行数据/图片/&#x27;</span> + missileType + <span class="string">&#x27;/&#x27;</span> + <span class="string">&quot;各导弹数据对比.png&quot;</span>)</span><br><span class="line">    plt.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Please enter what the version you want to process\n&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;1. Single&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;2. All in One&quot;</span>)</span><br><span class="line">cin = <span class="built_in">input</span>()</span><br><span class="line"><span class="keyword">if</span> (cin == <span class="string">&#x27;1&#x27;</span>):</span><br><span class="line">    <span class="comment"># Process Ground to Ground Missiles</span></span><br><span class="line">    dirProcess(os.listdir(<span class="string">&#x27;./导弹飞行数据/地地导弹&#x27;</span>), <span class="string">&#x27;地地导弹&#x27;</span>)</span><br><span class="line">    <span class="comment"># Process Air to Ground Missiles</span></span><br><span class="line">    dirProcess(os.listdir(<span class="string">&#x27;./导弹飞行数据/空地导弹&#x27;</span>), <span class="string">&#x27;空地导弹&#x27;</span>)</span><br><span class="line">    <span class="comment"># Process Surface to Air Missiles</span></span><br><span class="line">    dirProcess(os.listdir(<span class="string">&#x27;./导弹飞行数据/地空导弹&#x27;</span>), <span class="string">&#x27;地空导弹&#x27;</span>)</span><br><span class="line">    <span class="comment"># Process AA SR Missiles</span></span><br><span class="line">    dirProcess(os.listdir(<span class="string">&#x27;./导弹飞行数据/近距弹&#x27;</span>), <span class="string">&#x27;近距弹&#x27;</span>)</span><br><span class="line">    <span class="comment"># Process AA MR Missiles</span></span><br><span class="line">    dirProcess(os.listdir(<span class="string">&#x27;./导弹飞行数据/中距弹&#x27;</span>), <span class="string">&#x27;中距弹&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> (cin == <span class="string">&#x27;2&#x27;</span>):</span><br><span class="line">    <span class="comment"># Process Ground to Ground Missiles</span></span><br><span class="line">    dirProcessinAll(os.listdir(<span class="string">&#x27;./导弹飞行数据/地地导弹&#x27;</span>), <span class="string">&#x27;地地导弹&#x27;</span>)</span><br><span class="line">    <span class="comment"># Process Air to Ground Missiles</span></span><br><span class="line">    dirProcessinAll(os.listdir(<span class="string">&#x27;./导弹飞行数据/空地导弹&#x27;</span>), <span class="string">&#x27;空地导弹&#x27;</span>)</span><br><span class="line">    <span class="comment"># Process Surface to Air Missiles</span></span><br><span class="line">    dirProcessinAll(os.listdir(<span class="string">&#x27;./导弹飞行数据/地空导弹&#x27;</span>), <span class="string">&#x27;地空导弹&#x27;</span>)</span><br><span class="line">    <span class="comment"># Process AA SR Missiles</span></span><br><span class="line">    dirProcessinAll(os.listdir(<span class="string">&#x27;./导弹飞行数据/近距弹&#x27;</span>), <span class="string">&#x27;近距弹&#x27;</span>)</span><br><span class="line">    <span class="comment"># Process AA MR Missiles</span></span><br><span class="line">    dirProcessinAll(os.listdir(<span class="string">&#x27;./导弹飞行数据/中距弹&#x27;</span>), <span class="string">&#x27;中距弹&#x27;</span>)</span><br></pre></td></tr></table></figure><p>在其下创建目录，目录树如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">└─导弹飞行数据</span><br><span class="line">    ├─中距弹</span><br><span class="line">    ├─图片</span><br><span class="line">    │  ├─中距弹</span><br><span class="line">    │  ├─地地导弹</span><br><span class="line">    │  ├─地空导弹</span><br><span class="line">    │  ├─空地导弹</span><br><span class="line">    │  └─近距弹</span><br><span class="line">    ├─地地导弹</span><br><span class="line">    ├─地空导弹</span><br><span class="line">    ├─空地导弹</span><br><span class="line">    └─近距弹</span><br></pre></td></tr></table></figure><p>将你分析得到的导弹数据按分类放入<code>导弹飞行数据</code>文件夹下的分类即可</p><p>运行Python文件，在<code>图片</code>目录下即可查看输出的数据</p><h3 id="6-关于测试场景"><a href="#6-关于测试场景" class="headerlink" title="6. 关于测试场景"></a>6. 关于测试场景</h3><p>测试场景与Python代码我会一同打包放到网盘</p><p>下载地址：<a href="https://wwb.lanzoue.com/iTmkn0gvll7c">https://wwb.lanzoue.com/iTmkn0gvll7c</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近在研究Arma 3的SQF脚本，心想要是能收集一些游戏基础数据就好了，于是就有了这个项目。&lt;/p&gt;
&lt;h2 id=&quot;所需Mod&quot;&gt;&lt;a </summary>
      
    
    
    
    
    <category term="arma3" scheme="https://rickg.cn/tags/arma3/"/>
    
    <category term="sqf" scheme="https://rickg.cn/tags/sqf/"/>
    
  </entry>
  
  <entry>
    <title>设置OpenWrt的防火墙，从外网访问内网服务</title>
    <link href="https://rickg.cn/2022/08/10/openwrt-config-ipv6-firewall/"/>
    <id>https://rickg.cn/2022/08/10/openwrt-config-ipv6-firewall/</id>
    <published>2022-08-10T09:50:51.000Z</published>
    <updated>2023-02-18T03:40:28.398Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在运营商提供IPv6后，家中每一个内网设备都会拥有IPv6地址。</p><p>但是发现内网的设备，虽然有公网IPv6地址，但是仅仅能ping通，无法从外网访问。</p><p>最后发现是OpenWrt的防火墙阻断了连接，于是决定通过设置OpenWrt防火墙来开放端口。</p><h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p>打开OpenWrt管理界面，点击<code>网络</code> → <code>防火墙</code> → <code>通信规则</code></p><p>点击<code>添加与编辑</code>：</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20220810174525648.png" alt="image-20220810174525648" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20220810174525648</span></div></div><p>按图编辑：</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20220810174827165.png" alt="image-20220810174827165" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20220810174827165</span></div></div><p>保存后，外网设备可以正常访问了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在运营商提供IPv6后，家中每一个内网设备都会拥有IPv6地址。&lt;/p&gt;
&lt;p&gt;但是发现内网的设备，虽然有公网IPv6地址，但是仅仅能pin</summary>
      
    
    
    
    
    <category term="openwrt" scheme="https://rickg.cn/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>为比特彗星开放IPv6端口</title>
    <link href="https://rickg.cn/2022/08/07/bitcomet-ipv6-green-light/"/>
    <id>https://rickg.cn/2022/08/07/bitcomet-ipv6-green-light/</id>
    <published>2022-08-07T10:09:45.000Z</published>
    <updated>2023-02-15T00:48:45.382Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ip6tables -A FORWARD -p tcp --dport [BitComet端口] -j ACCEPT</span><br><span class="line">ip6tables -A FORWARD -p udp --dport [BitComet端口] -j ACCEPT</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;</summary>
      
    
    
    
    
    <category term="bitcomet" scheme="https://rickg.cn/tags/bitcomet/"/>
    
  </entry>
  
  <entry>
    <title>E5SubBot的配置使用</title>
    <link href="https://rickg.cn/2022/07/10/configure-e5sub-bot/"/>
    <id>https://rickg.cn/2022/07/10/configure-e5sub-bot/</id>
    <published>2022-07-10T08:11:38.000Z</published>
    <updated>2023-02-18T03:40:18.233Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在拥有Office E5订阅后，如何续期成了一个大问题。最近找到了一个GitHub项目：<a href="https://github.com/iyear/E5SubBot">iyear&#x2F;E5SubBot</a>，决定用它来续期E5。</p><h2 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h2><ul><li>1 * VPS（要能访问Telegram）</li><li>1 * Office E5账号</li><li>1 * Telegram账号</li></ul><h2 id="申请Telegram机器人"><a href="#申请Telegram机器人" class="headerlink" title="申请Telegram机器人"></a>申请Telegram机器人</h2><p>添加@BotFather机器人，输入<code>/start </code>开始</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20220710162212450.png" alt="image-20220710162212450" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20220710162212450</span></div></div><p>输入<code>/newbot</code>创建新机器人</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20220710162320105.png" alt="image-20220710162320105" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20220710162320105</span></div></div><p>输入bot名字</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20220710162345391.png" alt="image-20220710162345391" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20220710162345391</span></div></div><p>输入bot用户名，得到bot的Token</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20220710162516659.png" alt="image-20220710162516659" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20220710162516659</span></div></div><h2 id="配置E5SubBot"><a href="#配置E5SubBot" class="headerlink" title="配置E5SubBot"></a>配置E5SubBot</h2><p>在 <a href="https://github.com/iyear/E5SubBot/releases">Releases</a> 页面下载对应系统的二进制文件，上传至服务器</p><p>重命名<code>config.yml.example</code>为<code>config.yml</code></p><p>编辑<code>config.yml</code>，将<code>bot_token</code>一项的值修改为刚刚获取的Token</p><p>前往 <a href="https://t.me/userinfobot">https://t.me/userinfobot</a> 获取自己的tgid，并填入<code>admin</code>项中</p><h2 id="启动E5SubBot"><a href="#启动E5SubBot" class="headerlink" title="启动E5SubBot"></a>启动E5SubBot</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">screen -S e5sub</span><br><span class="line">chmod +x E5SubBot</span><br><span class="line">./E5SubBot</span><br><span class="line">(Ctrl A+D)</span><br></pre></td></tr></table></figure><h2 id="绑定账号"><a href="#绑定账号" class="headerlink" title="绑定账号"></a>绑定账号</h2><p>参照以下教程（图片来自网络）</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/E5Sub_1.jpg" alt="E5Sub_1" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">E5Sub_1</span></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/E5Sub_2.jpg" alt="E5Sub_2" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">E5Sub_2</span></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/E5Sub_3.jpg" alt="E5Sub_3" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">E5Sub_3</span></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/E5Sub_4.jpg" alt="E5Sub_4" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">E5Sub_4</span></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/E5Sub_5.jpg" alt="E5Sub_5" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">E5Sub_5</span></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/E5Sub_6.jpg" alt="E5Sub_6" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">E5Sub_6</span></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在拥有Office E5订阅后，如何续期成了一个大问题。最近找到了一个GitHub项目：&lt;a href=&quot;https://github.co</summary>
      
    
    
    
    
    <category term="Office E5" scheme="https://rickg.cn/tags/Office-E5/"/>
    
  </entry>
  
  <entry>
    <title>记一次给PVE配置ddns</title>
    <link href="https://rickg.cn/2022/06/01/pve-configure-ddns/"/>
    <id>https://rickg.cn/2022/06/01/pve-configure-ddns/</id>
    <published>2022-06-01T01:33:07.000Z</published>
    <updated>2023-02-18T03:40:33.630Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>随着ipv6的普及，越来越多的终端支持ipv6。因此我决定给家中的Proxmox VE配置ipv6并配置ddns以通过外网访问。</p><h3 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h3><ul><li>一台支持ipv6的路由器</li><li>Proxmox VE主机</li><li>一个域名</li><li><a href="https://github.com/jeessy2/ddns-go">ddns-go</a></li></ul><h2 id="为Proxmox-VE启用ipv6"><a href="#为Proxmox-VE启用ipv6" class="headerlink" title="为Proxmox VE启用ipv6"></a>为Proxmox VE启用ipv6</h2><p>Proxmox安装后默认没有通过SLAAC配置公网ipv6地址，需要手动配置</p><p>在<code>/etc/sysctl.conf</code>中添加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">net.ipv6.conf.all.accept_ra=2</span><br><span class="line">net.ipv6.conf.default.accept_ra=2</span><br><span class="line">net.ipv6.conf.vmbr0.accept_ra=2</span><br><span class="line">net.ipv6.conf.all.autoconf=1</span><br><span class="line">net.ipv6.conf.default.autoconf=1</span><br><span class="line">net.ipv6.conf.vmbr0.autoconf=1</span><br></pre></td></tr></table></figure><p>来为vmbr0网桥启用自动获取公网ipv6地址</p><p>重启后输入<code>ifconfig</code>：</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20220601090839399.png" alt="image-20220601090839399" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20220601090839399</span></div></div><p>ping外网也是正常的</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20220601090957203.png" alt="image-20220601090957203" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20220601090957203</span></div></div><h2 id="安装ddns-go"><a href="#安装ddns-go" class="headerlink" title="安装ddns-go"></a>安装ddns-go</h2><p>前往项目的<a href="https://github.com/jeessy2/ddns-go/releases">GitHub Release页面</a>下载最新版本，这里以3.7.1版为例</p><h3 id="解压到-x2F-opt"><a href="#解压到-x2F-opt" class="headerlink" title="解压到&#x2F;opt"></a>解压到&#x2F;opt</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/ddns-go</span><br><span class="line">tar -zxvf ddns-go_3.7.1_Linux_x86_64.tar.gz -C /opt/ddns-go</span><br></pre></td></tr></table></figure><h3 id="设置为系统服务"><a href="#设置为系统服务" class="headerlink" title="设置为系统服务"></a>设置为系统服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/ddns-go</span><br><span class="line">./ddns-go -s install</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">卸载服务请执行 ./ddns-go -s uninstall</span></span><br></pre></td></tr></table></figure><h2 id="配置ddns-go"><a href="#配置ddns-go" class="headerlink" title="配置ddns-go"></a>配置ddns-go</h2><p>访问<code>http://[服务器ip]:9876</code></p><p>设置dns服务商</p><p>勾选<code>IPv6</code>项下的<code>是否启用</code>，并添加解析域名</p><p>现在可以通过指定的域名来访问pve服务了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;随着ipv6的普及，越来越多的终端支持ipv6。因此我决定给家中的Proxmox VE配置ipv6并配置ddns以通过外网访问。&lt;/p&gt;
&lt;</summary>
      
    
    
    
    
    <category term="pve" scheme="https://rickg.cn/tags/pve/"/>
    
    <category term="ddns" scheme="https://rickg.cn/tags/ddns/"/>
    
  </entry>
  
  <entry>
    <title>为Cloudreve添加离线下载节点</title>
    <link href="https://rickg.cn/2022/05/29/cloudreve-child-node/"/>
    <id>https://rickg.cn/2022/05/29/cloudreve-child-node/</id>
    <published>2022-05-29T14:49:07.000Z</published>
    <updated>2022-05-29T14:49:52.353Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在配置<a href="https://rickg.cn/2022/05/29/cloudreve/">Cloudreve</a>期间，发现VPS仅有的60G空间对于离线下载远远不够，因此决定将内网的一台机器作为Cloudreve的离线下载节点。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>在子节点上运行Cloudreve和Aria2，并通过<a href="https://rickg.cn/2022/05/28/how-to-configure-frp/">frp</a>将子节点服务暴露给公网，最后通过Cloudreve自带的功能进行子节点离线下载</p><blockquote><p><em>Cloudreve 支持“从机离线下载”，您可以将离线下载任务分流至多台服务器处理，避免这些任务过多占用主机的资源。每个负责处理离线下载任务的节点需要运行一组 Cloudreve 和 Aria2 实例。您可以按照管理面板中的节点添加向导指引配置并添加新节点。</em></p></blockquote><h3 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h3><ul><li>1 * 拥有公网ip的机器</li><li>1 * 无公网ip的机器</li><li><a href="https://github.com/fatedier/frp/">frp</a>软件</li><li><a href="https://github.com/cloudreve/Cloudreve/">Cloudreve</a></li></ul><h2 id="准备步骤"><a href="#准备步骤" class="headerlink" title="准备步骤"></a>准备步骤</h2><h3 id="内网机"><a href="#内网机" class="headerlink" title="内网机"></a>内网机</h3><h4 id="安装Cloudreve"><a href="#安装Cloudreve" class="headerlink" title="安装Cloudreve"></a>安装Cloudreve</h4><p>参见<a href="https://rickg.cn/2022/05/29/cloudreve/">安装配置Cloudreve</a></p><h4 id="安装frp"><a href="#安装frp" class="headerlink" title="安装frp"></a>安装frp</h4><p>参见<a href="https://rickg.cn/2022/05/28/how-to-configure-frp/">frp内网穿透教程</a></p><h4 id="安装aria2"><a href="#安装aria2" class="headerlink" title="安装aria2"></a>安装aria2</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt install aria2</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建aria2配置文件</span></span><br><span class="line">mkdir -p /etc/aria2</span><br><span class="line">nano /etc/aria2/aria2.conf</span><br></pre></td></tr></table></figure><p>在<code>/etc/aria2/aria2.conf</code>中添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 启用 RPC 服务</span><br><span class="line">enable-rpc=true</span><br><span class="line"># RPC 监听端口</span><br><span class="line">rpc-listen-port=6800</span><br><span class="line"># RPC 授权令牌，可自行设定</span><br><span class="line">rpc-secret=&lt;your token&gt;</span><br></pre></td></tr></table></figure><p>创建aria2用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd aria2</span><br></pre></td></tr></table></figure><p>编辑<code>/etc/systemd/system/aria2c.service</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description= Aria2c Service</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">User=aria2</span><br><span class="line">ExecStart=/usr/bin/aria2c --conf-path=/etc/aria2/aria2.conf</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>创建离线下载临时文件夹，并设置权限防止报错</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir /offline_download</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将所有者改为aria2用户并设置权限</span></span><br><span class="line">chown -R aria2 /offline_download</span><br><span class="line">chmod -R 777 /offline_download</span><br></pre></td></tr></table></figure><h4 id="配置frp"><a href="#配置frp" class="headerlink" title="配置frp"></a>配置frp</h4><p><code>/etc/frp/frpc.ini</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = 公网机ip</span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="section">[https2http]</span></span><br><span class="line"><span class="attr">type</span> = https</span><br><span class="line"><span class="attr">custom_domains</span> = 访问内网服务用的域名</span><br><span class="line"></span><br><span class="line"><span class="attr">plugin</span> = https2http</span><br><span class="line"><span class="attr">plugin_local_addr</span> = <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">5212</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># HTTPS 证书相关的配置</span></span><br><span class="line"><span class="attr">plugin_crt_path</span> = 域名证书crt文件路径</span><br><span class="line"><span class="attr">plugin_key_path</span> = 域名证书key文件路径</span><br><span class="line"><span class="attr">plugin_host_header_rewrite</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">plugin_header_X-From-Where</span> = frp</span><br></pre></td></tr></table></figure><blockquote><p>注：这里我公网机Cloudreve使用了https，则暴露内网机服务时必须也使用https</p></blockquote><h3 id="公网机"><a href="#公网机" class="headerlink" title="公网机"></a>公网机</h3><h4 id="安装frp、Cloudreve略"><a href="#安装frp、Cloudreve略" class="headerlink" title="安装frp、Cloudreve略"></a>安装frp、Cloudreve略</h4><h4 id="配置frp-1"><a href="#配置frp-1" class="headerlink" title="配置frp"></a>配置frp</h4><p>在服务端frp配置中添加用于访问内网Cloudreve的HTTPS端口</p><p><code>/etc/frp/frps.ini</code>：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">bind_port</span> = <span class="number">7000</span></span><br><span class="line"><span class="attr">vhost_https_port</span> = 访问用端口</span><br></pre></td></tr></table></figure><h2 id="配置Cloudreve"><a href="#配置Cloudreve" class="headerlink" title="配置Cloudreve"></a>配置Cloudreve</h2><p>现在可以通过<code>https://[公网机ip]:端口</code>访问内网的Cloudreve了</p><p>打开公网机上的Cloudreve，点击<code>管理面板</code>→<code>离线下载节点</code>→<code>接入新节点</code>，打开添加新节点界面，复制生成的<code>从机密钥</code></p><p>在内网机上Cloudreve配置文件中添加：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Slave]</span></span><br><span class="line"><span class="attr">Secret</span> = 从机密钥</span><br></pre></td></tr></table></figure><p>并修改<code>Mode</code>字段的值为<code>slave</code>，重启Cloudreve</p><p>在管理面板从机地址中填入<code>https://[公网机ip]:端口</code>，并测试是否正常</p><p>点<code>下一步</code>→<code>启用</code>，在<code>RPC授权令牌</code>中填入<code>aria2c.conf</code>中的<code>rpc-secret</code></p><p><code>RPC服务地址</code>填<code>http://127.0.0.1:6800/</code></p><p>绝对路径填离线下载文件夹在内网机上的位置，如<code>/offline_download</code></p><p>完成后<code>测试aria2通信</code>，检查是否正常</p><p>点击下一步设置节点名字，自此，离线下载节点添加完成</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在配置&lt;a href=&quot;https://rickg.cn/2022/05/29/cloudreve/&quot;&gt;Cloudreve&lt;/a&gt;期间，发现</summary>
      
    
    
    
    
    <category term="cloudreve" scheme="https://rickg.cn/tags/cloudreve/"/>
    
  </entry>
  
  <entry>
    <title>安装配置Cloudreve</title>
    <link href="https://rickg.cn/2022/05/29/cloudreve/"/>
    <id>https://rickg.cn/2022/05/29/cloudreve/</id>
    <published>2022-05-29T12:39:36.000Z</published>
    <updated>2023-02-18T03:40:15.857Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>自从申请到Office E5之后便有了容量高达5TB的OneDrive。心想怎能没有一个配套的网盘程序呢，于是便有了此文。</p><h3 id="何为Cloudreve？"><a href="#何为Cloudreve？" class="headerlink" title="何为Cloudreve？"></a>何为Cloudreve？</h3><p>以下内容来自<a href="https://docs.cloudreve.org/">官方文档</a></p><blockquote><p>Cloudreve 可以让您快速搭建起公私兼备的网盘系统。Cloudreve 在底层支持不同的云存储平台，用户在实际使用时无须关心物理存储方式。你可以使用 Cloudreve 搭建个人用网盘、文件分享系统，亦或是针对大小团体的公有云系统。</p></blockquote><h2 id="安装Cloudreve"><a href="#安装Cloudreve" class="headerlink" title="安装Cloudreve"></a>安装Cloudreve</h2><blockquote><p>本文以Debian 10 (buster)，amd64架构，Cloudreve 3.5.3为准，Cloudreve安装在&#x2F;opt&#x2F;cloudreve</p></blockquote><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>前往<a href="https://github.com/cloudreve/Cloudreve/releases">Github Release</a>页面根据系统架构下载最新版本</p><h3 id="解压到-x2F-opt"><a href="#解压到-x2F-opt" class="headerlink" title="解压到&#x2F;opt"></a>解压到&#x2F;opt</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/cloudreve</span><br><span class="line">tar -zxvf cloudreve_3.5.3_linux_amd64.tar.gz -C /opt/cloudreve</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加可执行权限</span></span><br><span class="line">chmod +x /opt/cloudreve/cloudreve</span><br></pre></td></tr></table></figure><h3 id="获取初始管理员密码"><a href="#获取初始管理员密码" class="headerlink" title="获取初始管理员密码"></a>获取初始管理员密码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/cloudreve</span><br><span class="line">./cloudreve</span><br></pre></td></tr></table></figure><p>你应该看到如下图所示的界面</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20220529184316860.png" alt="image-20220529184316860" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20220529184316860</span></div></div><h3 id="配置systemd"><a href="#配置systemd" class="headerlink" title="配置systemd"></a>配置systemd</h3><p>新建<code>/usr/lib/systemd/system/cloudreve.service</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Cloudreve</span><br><span class="line">Documentation=https://docs.cloudreve.org</span><br><span class="line">After=network.target</span><br><span class="line">After=mysqld.service</span><br><span class="line">Wants=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">WorkingDirectory=/opt/cloudreve</span><br><span class="line">ExecStart=/opt/cloudreve/cloudreve</span><br><span class="line">Restart=on-abnormal</span><br><span class="line">RestartSec=5s</span><br><span class="line">KillMode=mixed</span><br><span class="line"></span><br><span class="line">StandardOutput=null</span><br><span class="line">StandardError=syslog</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>而后</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更新配置</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动服务</span></span><br><span class="line">systemctl start cloudreve</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置开机启动</span></span><br><span class="line">systemctl enable cloudreve</span><br></pre></td></tr></table></figure><p>管理命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动服务</span></span><br><span class="line">systemctl start cloudreve</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">停止服务</span></span><br><span class="line">systemctl stop cloudreve</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重启服务</span></span><br><span class="line">systemctl restart cloudreve</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看状态</span></span><br><span class="line">systemctl status cloudreve</span><br></pre></td></tr></table></figure><h3 id="配置反代"><a href="#配置反代" class="headerlink" title="配置反代"></a>配置反代</h3><p>现在可以通过<code>http://[server_ip]:5212</code>来访问Cloudreve了，若有通过HTTPS访问的需求，则需配置反代（以nginx为例）</p><p>在网站的<code>server</code>字段中加入：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> Host <span class="variable">$http_host</span>;</span><br><span class="line">    <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://127.0.0.1:5212;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如果您要使用本地存储策略，请将下一行注释符删除，并更改大小为理论最大文件尺寸</span></span><br><span class="line">    <span class="comment"># client_max_body_size 20000m;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="配置Cloudreve"><a href="#配置Cloudreve" class="headerlink" title="配置Cloudreve"></a>配置Cloudreve</h2><p>访问Cloudreve后台，使用初始用户密码登录</p><p>点击右上角的头像→管理面板，会询问是否修正站点URL，确认即可</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20220529184746382.png" alt="image-20220529184746382" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20220529184746382</span></div></div><h3 id="修改默认用户密码"><a href="#修改默认用户密码" class="headerlink" title="修改默认用户密码"></a>修改默认用户密码</h3><p>在管理面板中点击<code>用户</code>，在右边的用户列表中修改即可</p><h3 id="添加存储策略"><a href="#添加存储策略" class="headerlink" title="添加存储策略"></a>添加存储策略</h3><p>管理面板→存储策略→添加存储策略，如下图所示</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20220529185722835.png" alt="image-20220529185722835" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20220529185722835</span></div></div><div class="tag-plugin link dis-select"><a class="link-card plain" title="各存储策略对比&nbsp;–&nbsp;Cloudreve" href="https://docs.cloudreve.org/use/policy/compare" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">各存储策略对比&nbsp;–&nbsp;Cloudreve</span><span class="cap link fs12">https://docs.cloudreve.org/use/policy/compare</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.4/link/8f277b4ee0ecd.svg"></div></div></a></div><p>各存储策略的官方引导式配置已十分详细，这里不再赘述</p><h2 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h2><h3 id="忘记了密码？"><a href="#忘记了密码？" class="headerlink" title="忘记了密码？"></a>忘记了密码？</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/cloudreve/cloudreve --database-script ResetAdminPassword</span><br></pre></td></tr></table></figure><h3 id="校准用户容量"><a href="#校准用户容量" class="headerlink" title="校准用户容量"></a>校准用户容量</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/cloudreve/cloudreve --database-script CalibrateUserStorage</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;自从申请到Office E5之后便有了容量高达5TB的OneDrive。心想怎能没有一个配套的网盘程序呢，于是便有了此文。&lt;/p&gt;
&lt;h3 </summary>
      
    
    
    
    
    <category term="cloudreve" scheme="https://rickg.cn/tags/cloudreve/"/>
    
  </entry>
  
  <entry>
    <title>frp内网穿透教程</title>
    <link href="https://rickg.cn/2022/05/28/how-to-configure-frp/"/>
    <id>https://rickg.cn/2022/05/28/how-to-configure-frp/</id>
    <published>2022-05-28T07:33:35.000Z</published>
    <updated>2022-05-28T08:54:56.606Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="frp是什么"><a href="#frp是什么" class="headerlink" title="frp是什么"></a>frp是什么</h3><p>frp 是一个专注于内网穿透的高性能的反向代理应用，支持 TCP、UDP、HTTP、HTTPS 等多种协议。可以将内网服务以安全、便捷的方式通过具有公网 IP 节点的中转暴露到公网。</p><p>项目地址：<a href="https://github.com/fatedier/frp/">https://github.com/fatedier/frp/</a></p><h3 id="为什么要写这篇文章"><a href="#为什么要写这篇文章" class="headerlink" title="为什么要写这篇文章"></a>为什么要写这篇文章</h3><p>最近在折腾arma3的服务器，饱受没有公网ip之困扰。为此写下这篇教程记录我折腾内网穿透的整个过程。</p><blockquote><p>本文部分参考了<a href="https://gofrp.org/docs/">官方文档</a>的内容</p><p>全文以写作这篇文章的最新版（v0.43.0）为准</p><p>配置环境：Debian 10 64-bit</p></blockquote><h2 id="下载frp"><a href="#下载frp" class="headerlink" title="下载frp"></a>下载frp</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/fatedier/frp/releases/download/v0.43.0/frp_0.43.0_linux_amd64.tar.gz</span><br></pre></td></tr></table></figure><h2 id="安装frp"><a href="#安装frp" class="headerlink" title="安装frp"></a>安装frp</h2><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf frp_0.43.0_linux_amd64.tar.gz</span><br></pre></td></tr></table></figure><h3 id="复制到系统目录"><a href="#复制到系统目录" class="headerlink" title="复制到系统目录"></a>复制到系统目录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd frp_0.43.0_linux_amd64/</span><br><span class="line">mkdir -p /etc/frp</span><br><span class="line">mv *.ini /etc/frp</span><br><span class="line">mv frpc frps /usr/bin</span><br></pre></td></tr></table></figure><h3 id="配置systemd"><a href="#配置systemd" class="headerlink" title="配置systemd"></a>配置systemd</h3><h4 id="公网机"><a href="#公网机" class="headerlink" title="公网机"></a>公网机</h4><p>新建<code>/usr/lib/systemd/system/frps.service:</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Frp Server Service</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">User=nobody</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=5s</span><br><span class="line">ExecStart=/usr/bin/frps -c /etc/frp/frps.ini</span><br><span class="line">LimitNOFILE=1048576</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>随后执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable frps</span><br></pre></td></tr></table></figure><h4 id="内网机"><a href="#内网机" class="headerlink" title="内网机"></a>内网机</h4><p>新建<code>/usr/lib/systemd/system/frpc.service:</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Frp Client Service</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">User=nobody</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=5s</span><br><span class="line">ExecStart=/usr/bin/frpc -c /etc/frp/frpc.ini</span><br><span class="line">ExecReload=/usr/bin/frpc reload -c /etc/frp/frpc.ini</span><br><span class="line">LimitNOFILE=1048576</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>随后执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable frpc</span><br></pre></td></tr></table></figure><h2 id="启动frp"><a href="#启动frp" class="headerlink" title="启动frp"></a>启动frp</h2><h3 id="公网机-1"><a href="#公网机-1" class="headerlink" title="公网机"></a>公网机</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start frps</span><br></pre></td></tr></table></figure><h3 id="内网机-1"><a href="#内网机-1" class="headerlink" title="内网机"></a>内网机</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start frpc</span><br></pre></td></tr></table></figure><blockquote><p>注：每次修改完配置应通过<code>systemctl restart</code>重启服务</p></blockquote><h2 id="配置frp"><a href="#配置frp" class="headerlink" title="配置frp"></a>配置frp</h2><h3 id="普通服务（以SSH为例）"><a href="#普通服务（以SSH为例）" class="headerlink" title="普通服务（以SSH为例）"></a>普通服务（以SSH为例）</h3><p>公网机修改<code>/etc/frp/frps.ini</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">bind_port</span> = <span class="number">7000</span></span><br></pre></td></tr></table></figure><p>内网机修改<code>/etc/frp/frpc.ini</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = 公网机ip</span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="section">[ssh]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = 本地SSH端口</span><br><span class="line"><span class="attr">remote_port</span> = 公网访问服务用的端口</span><br></pre></td></tr></table></figure><p>其他服务以此类推，如我的Arma 3服务器配置为：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = xxx.xxx.xxx.xxx</span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="section">[arma3-1]</span></span><br><span class="line"><span class="attr">type</span> = udp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">2302</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">2302</span></span><br><span class="line"></span><br><span class="line"><span class="section">[arma3-2]</span></span><br><span class="line"><span class="attr">type</span> = udp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">2303</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">2303</span></span><br></pre></td></tr></table></figure><h3 id="Web服务（HTTP）"><a href="#Web服务（HTTP）" class="headerlink" title="Web服务（HTTP）"></a>Web服务（HTTP）</h3><p>在公网机<code>frps.ini</code>中添加一行</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">vhost_http_port</span> = <span class="number">8080</span></span><br></pre></td></tr></table></figure><p>即设置http请求端口为8080</p><p>在内网机<code>frpc.ini</code>中添加</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[web]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_port</span> = <span class="number">80</span></span><br><span class="line"><span class="attr">custom_domains</span> = your.domain</span><br></pre></td></tr></table></figure><p>分别启动frps，frpc。并将your.domain的A记录解析至公网机</p><p>访问<code>http://your.domain:8080</code>来访问内网服务</p><h3 id="Web服务（HTTPS）"><a href="#Web服务（HTTPS）" class="headerlink" title="Web服务（HTTPS）"></a>Web服务（HTTPS）</h3><p>在公网机<code>/etc/frp/frps.ini</code>中添加</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">vhost_https_port</span> = <span class="number">443</span></span><br></pre></td></tr></table></figure><p>即设置https请求端口为443</p><h4 id="暴露本地HTTP服务"><a href="#暴露本地HTTP服务" class="headerlink" title="暴露本地HTTP服务"></a>暴露本地HTTP服务</h4><p>在内网机<code>/etc/frp/frpc.ini</code>中添加</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[test_htts2http]</span></span><br><span class="line"><span class="attr">type</span> = https</span><br><span class="line"><span class="attr">custom_domains</span> = your.domain</span><br><span class="line"></span><br><span class="line"><span class="attr">plugin</span> = https2http</span><br><span class="line"><span class="attr">plugin_local_addr</span> = <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># HTTPS 证书相关的配置</span></span><br><span class="line"><span class="attr">plugin_crt_path</span> = ./server.crt</span><br><span class="line"><span class="attr">plugin_key_path</span> = ./server.key</span><br><span class="line"><span class="attr">plugin_host_header_rewrite</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">plugin_header_X-From-Where</span> = frp</span><br></pre></td></tr></table></figure><p>分别启动frpc，frps</p><p>访问<code>https://your.domain</code>来访问内网服务</p><h4 id="暴露本地HTTPS服务"><a href="#暴露本地HTTPS服务" class="headerlink" title="暴露本地HTTPS服务"></a>暴露本地HTTPS服务</h4><p>在内网机<code>/etc/frp/frpc.ini</code>中添加</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[https2https]</span></span><br><span class="line"><span class="attr">type</span> = https</span><br><span class="line"><span class="attr">custom_domains</span> = your.domain</span><br><span class="line"></span><br><span class="line"><span class="attr">plugin</span> = https2https</span><br><span class="line"><span class="attr">plugin_local_addr</span> = <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">443</span></span><br><span class="line"><span class="comment"># 证书和密钥位置</span></span><br><span class="line"><span class="attr">plugin_crt_path</span> = /etc/frp/server.crt</span><br><span class="line"><span class="attr">plugin_key_path</span> = /etc/frp/server.key</span><br></pre></td></tr></table></figure><h2 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h2><h3 id="服务端Web界面"><a href="#服务端Web界面" class="headerlink" title="服务端Web界面"></a>服务端Web界面</h3><p>在公网机的<code>/etc/frp/frps.ini</code>的<code>common</code>中添加</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">dashboard_port</span> = <span class="number">7500</span></span><br><span class="line"><span class="comment"># 用户名和密码</span></span><br><span class="line"><span class="attr">dashboard_user</span> = admin</span><br><span class="line"><span class="attr">dashboard_pwd</span> = admin</span><br></pre></td></tr></table></figure><p>通过<code>http://[公网机ip]:7500</code>来访问服务端Web界面</p><h3 id="客户端Web界面"><a href="#客户端Web界面" class="headerlink" title="客户端Web界面"></a>客户端Web界面</h3><p>在内网机的<code>/etc/frp/frpc.ini</code>的<code>common</code>中添加</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">admin_addr</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">admin_port</span> = <span class="number">7400</span></span><br><span class="line"><span class="attr">admin_user</span> = admin</span><br><span class="line"><span class="attr">admin_pwd</span> = admin</span><br></pre></td></tr></table></figure><p>通过<code>http://127.0.0.1:7400</code>来访问客户端Web界面</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;h3 id=&quot;frp是什么&quot;&gt;&lt;a href=&quot;#frp是什么&quot; class=&quot;headerlink&quot; title=&quot;frp是什么&quot;&gt;&lt;/a&gt;f</summary>
      
    
    
    
    
    <category term="frp" scheme="https://rickg.cn/tags/frp/"/>
    
    <category term="教程" scheme="https://rickg.cn/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>在自有服务器上部署Snapdrop</title>
    <link href="https://rickg.cn/2022/05/28/deploy-snapdrop/"/>
    <id>https://rickg.cn/2022/05/28/deploy-snapdrop/</id>
    <published>2022-05-28T07:26:54.000Z</published>
    <updated>2023-02-18T03:40:20.737Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>购入笔记本和备用机后，对于家里多设备互传文件需求增加了，恰好被<a href="https://copur.xyz/">@Copur</a>安利这样一个项目，于是便打算在自己的服务器上部署</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="Bellisario/node-snapdrop:&nbsp;Node&nbsp;version&nbsp;of&nbsp;the&nbsp;original&nbsp;Snapdrop" href="https://github.com/Bellisario/node-snapdrop" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">Bellisario/node-snapdrop:&nbsp;Node&nbsp;version&nbsp;of&nbsp;the&nbsp;original&nbsp;Snapdrop</span><span class="cap link fs12">https://github.com/Bellisario/node-snapdrop</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.4/link/8f277b4ee0ecd.svg"></div></div></a></div><h2 id="服务器端配置"><a href="#服务器端配置" class="headerlink" title="服务器端配置"></a>服务器端配置</h2><p>clone项目</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/Bellisario/node-snapdrop.git</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">速度慢可考虑fastgit</span></span><br><span class="line">git clone https://hub.fastgit.xyz/Bellisario/node-snapdrop.git</span><br></pre></td></tr></table></figure><p>安装依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd node-snapdrop</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>安装pm2</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g pm2</span><br></pre></td></tr></table></figure><p>启动Snapdrop</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pm2 start index.js</span><br></pre></td></tr></table></figure><p>现在可以通过localhost:3000来访问Snapdrop了</p><h2 id="反代配置"><a href="#反代配置" class="headerlink" title="反代配置"></a>反代配置</h2><p>在网站nginx配置文件头部加入</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">map</span> <span class="variable">$http_upgrade</span> <span class="variable">$connection_upgrade</span> &#123;</span><br><span class="line"><span class="attribute">default</span> upgrade;</span><br><span class="line">&#x27;&#x27; close;</span><br><span class="line">&#125;</span><br><span class="line"><span class="section">upstream</span> websocket &#123;</span><br><span class="line">  <span class="attribute">server</span> <span class="number">127.0.0.1:3000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在反代配置文件的<code>location ^~ /</code> 下加入</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line"><span class="attribute">proxy_set_header</span> Connection <span class="variable">$connection_upgrade</span>;</span><br></pre></td></tr></table></figure><h2 id="CDN配置-（以又拍云为例）"><a href="#CDN配置-（以又拍云为例）" class="headerlink" title="CDN配置 （以又拍云为例）"></a>CDN配置 （以又拍云为例）</h2><p>又拍云控制台创建WebSocket服务，域名填需要绑定的域名，协议http，端口80，如图所示</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20220528152422766.png" alt="image-20220528152422766" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20220528152422766</span></div></div><p>随后在服务的https配置中添加证书，配置完成</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;购入笔记本和备用机后，对于家里多设备互传文件需求增加了，恰好被&lt;a href=&quot;https://copur.xyz/&quot;&gt;@Copur&lt;/a&gt;</summary>
      
    
    
    
    
    <category term="Snapdrop" scheme="https://rickg.cn/tags/Snapdrop/"/>
    
  </entry>
  
  <entry>
    <title>powershell美化</title>
    <link href="https://rickg.cn/2022/05/28/powershell-polish/"/>
    <id>https://rickg.cn/2022/05/28/powershell-polish/</id>
    <published>2022-05-28T05:20:40.000Z</published>
    <updated>2023-02-18T03:40:30.866Z</updated>
    
    <content type="html"><![CDATA[<h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20220528135813783.png" alt="image-20220528135813783" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20220528135813783</span></div></div><h2 id="安装oh-my-posh"><a href="#安装oh-my-posh" class="headerlink" title="安装oh-my-posh"></a>安装oh-my-posh</h2><p>在Microsoft Store安装Windows Terminal</p><p>执行如下命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Set-ExecutionPolicy</span> Bypass</span><br><span class="line"><span class="built_in">Install-Module</span> <span class="built_in">oh</span><span class="literal">-my-posh</span> <span class="literal">-Scope</span> CurrentUser</span><br><span class="line"><span class="built_in">Install-Module</span> posh<span class="literal">-git</span> <span class="literal">-Scope</span> CurrentUser</span><br></pre></td></tr></table></figure><p>如有提示按y即可</p><h2 id="启用oh-my-posh"><a href="#启用oh-my-posh" class="headerlink" title="启用oh-my-posh"></a>启用oh-my-posh</h2><p>配置PowerShell启动脚本</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">notepad <span class="variable">$PROFILE</span></span><br></pre></td></tr></table></figure><p>导入相应模块</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Import-Module</span> <span class="built_in">oh</span><span class="literal">-my-posh</span></span><br><span class="line"><span class="built_in">Import-Module</span> posh<span class="literal">-git</span></span><br></pre></td></tr></table></figure><p>设置主题为agnosterplus</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Set-PoshPrompt</span> <span class="literal">-Theme</span> agnosterplus</span><br></pre></td></tr></table></figure><h2 id="解决字体乱码"><a href="#解决字体乱码" class="headerlink" title="解决字体乱码"></a>解决字体乱码</h2><blockquote><p>参见 <a href="https://ohmyposh.dev/docs/fonts">Oh My Posh Docs</a></p></blockquote><p>下载Nerd Fonts，这里我选择的是Meslo Fonts</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="下载地址" href="https://www.nerdfonts.com/font-downloads" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">下载地址</span><span class="cap link fs12">https://www.nerdfonts.com/font-downloads</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.4/link/8f277b4ee0ecd.svg"></div></div></a></div><p>解压，选择<code>Meslo LG S Regular Nerd Font Complete Windows Compatible.ttf</code>并安装</p><p>打开Windows Terminal，按<code>Ctrl + ,</code> 打开设置，点击<code>Windows Powershell</code> –&gt; <code>外观</code>，将字体改为刚才安装的<code>MesloLGS NF</code>，如图所示</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20220528135059127.png" alt="image-20220528135059127" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20220528135059127</span></div></div><h2 id="启用模糊背景"><a href="#启用模糊背景" class="headerlink" title="启用模糊背景"></a>启用模糊背景</h2><p><code>设置</code> –&gt; <code>Windows Powershell</code> –&gt; <code>外观</code> –&gt; <code>透明度</code></p><p>启用 <code>Enable acrylic</code> 项</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20220528135302118.png" alt="image-20220528135302118" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">image-20220528135302118</span></div></div><h2 id="允许PowerShell执行任意脚本"><a href="#允许PowerShell执行任意脚本" class="headerlink" title="允许PowerShell执行任意脚本"></a>允许PowerShell执行任意脚本</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Set-ExecutionPolicy</span> Unrestricted</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;效果图&quot;&gt;&lt;a href=&quot;#效果图&quot; class=&quot;headerlink&quot; title=&quot;效果图&quot;&gt;&lt;/a&gt;效果图&lt;/h2&gt;&lt;div class=&quot;tag-plugin image&quot;&gt;&lt;div class=&quot;image-bg&quot;&gt;&lt;img src=&quot;https:/</summary>
      
    
    
    
    
    <category term="powershell" scheme="https://rickg.cn/tags/powershell/"/>
    
    <category term="美化" scheme="https://rickg.cn/tags/%E7%BE%8E%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>基于pve的Openwrt安装及配置</title>
    <link href="https://rickg.cn/2022/05/25/pve-openwrt/"/>
    <id>https://rickg.cn/2022/05/25/pve-openwrt/</id>
    <published>2022-05-25T07:10:34.000Z</published>
    <updated>2023-02-18T03:40:35.931Z</updated>
    
    <content type="html"><![CDATA[<h2 id="机器介绍"><a href="#机器介绍" class="headerlink" title="机器介绍"></a>机器介绍</h2><table><thead><tr><th align="center">类别</th><th align="center">型号</th></tr></thead><tbody><tr><td align="center">CPU</td><td align="center">Xeon X3440 @ 2.53GHz</td></tr><tr><td align="center">主板</td><td align="center">Supermicro X8SIL</td></tr><tr><td align="center">内存</td><td align="center">Kingston ECC 8GB DDR3-1600</td></tr><tr><td align="center">硬盘</td><td align="center">Kingston UV400</td></tr><tr><td align="center">系统</td><td align="center">Proxmox VE 7.2</td></tr></tbody></table><h2 id="Proxmox-VE的安装与配置"><a href="#Proxmox-VE的安装与配置" class="headerlink" title="Proxmox VE的安装与配置"></a>Proxmox VE的安装与配置</h2><h3 id="Step-1-制作启动盘"><a href="#Step-1-制作启动盘" class="headerlink" title="Step.1 制作启动盘"></a>Step.1 制作启动盘</h3><p>在<a href="https://www.proxmox.com/en/downloads/category/iso-images-pve">pve官网</a>下载pve的镜像（我这里使用的是7.2版，下载速度可能很慢，方法…你们懂得）然后使用相关工具写入即可，推荐使用<a href="https://etcher.io/">balenaEtcher</a>。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/image-20220525141530555.png" alt="写入启动盘" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">写入启动盘</span></div></div><h3 id="Step-2-安装pve"><a href="#Step-2-安装pve" class="headerlink" title="Step.2 安装pve"></a>Step.2 安装pve</h3><p>将U盘插入电脑，开机选择U盘启动，进入引导界面，选择<code>Install Proxmox VE</code>进入pve安装程序</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/pve-boot.png" alt="pve引导界面" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">pve引导界面</span></div></div><p>点agree同意协议</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/pve-license.png" alt="pve-license" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">pve-license</span></div></div><p>选择安装磁盘（这里开了个虚拟机来截图）</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/pve-seldisk.png" alt="pve-seldisk" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">pve-seldisk</span></div></div><p>设置root密码和邮箱</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/pve-password.png" alt="pve-password" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">pve-password</span></div></div><p>按实际情况配置网络，一般情况下会自动获取ip等信息</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/pve-setnetwork.png" alt="pve-setnetwork" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">pve-setnetwork</span></div></div><p>最后确认信息，点<code>Install</code>安装系统</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/pve-confirm.png" alt="pve-confirm" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">pve-confirm</span></div></div><h3 id="Step-3-配置pve"><a href="#Step-3-配置pve" class="headerlink" title="Step.3 配置pve"></a>Step.3 配置pve</h3><p>安装完后通过<code>https://[你设置的ip，如图中的192.168.3.7]:8006</code>访问pve管理界面</p><p>username填root，密码填安装系统时设置的密码</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/pve-login.png" alt="pve-login" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">pve-login</span></div></div><p>进入管理界面会弹出无有效订阅的提示，这个我们稍后会消除</p><p>选择左边数据中心下的唯一一个节点，点击<code>Shell</code>进入终端，运行以下命令安装pvetools：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;nameserver  8.8.8.8&quot; &gt;&gt; /etc/resolv.conf &amp;&amp; rm /etc/apt/sources.list.d/pve-enterprise.list &amp;&amp; export LC_ALL=en_US.UTF-8 &amp;&amp; apt update &amp;&amp; apt -y install git &amp;&amp; git clone https://github.com/ivanhao/pvetools.git &amp;&amp; cd pvetools &amp;&amp; ./pvetools.sh</span><br></pre></td></tr></table></figure><p>安装完成后会自动打开pvetools，语言选择中文</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/pve-pvetools.png" alt="pve-pvetools" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">pve-pvetools</span></div></div><p>配置国内源并去除订阅提示，其他按需求选择（我的Openwrt需要一个直通网口，这里配置了直通）</p><p>完成后执行<code>reboot</code>重启，这时再打开管理界面，烦人的订阅提示已经消失了</p><h2 id="OpenWrt的安装与配置"><a href="#OpenWrt的安装与配置" class="headerlink" title="OpenWrt的安装与配置"></a>OpenWrt的安装与配置</h2><h3 id="Step-1-配置虚拟机"><a href="#Step-1-配置虚拟机" class="headerlink" title="Step.1 配置虚拟机"></a>Step.1 配置虚拟机</h3><p>点击管理界面右上角的<code>创建虚拟机</code>，名称随便</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/pve-createvm.png" alt="pve-createvm" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">pve-createvm</span></div></div><p>选择<code>不使用任何介质</code></p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/pve-selsystem.png" alt="pve-selsystem" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">pve-selsystem</span></div></div><p>机型，BIOS什么的保持默认。磁盘大小默认，待会要删除</p><p>CPU这里我选择1核</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/pve-cpu.png" alt="pve-cpu" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">pve-cpu</span></div></div><p>内存按需求定，这里我填1024MB</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/pve-memory.png" alt="pve-memory" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">pve-memory</span></div></div><p>网络这里，模型选virtio（性能较高，除了OpenWrt里会提示半双工，实际上是全双工）。这里使用OpenWrt的防火墙，将防火墙一项取消选择</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/pve-network2.png" alt="pve-network2" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">pve-network2</span></div></div><p>最后创建虚拟机，完成后在左边列表里选择虚拟机，点击右边的<code>硬件</code>，选中刚创建的虚拟磁盘，点击<code>分离</code>，选中分离出的硬盘，点击<code>删除</code></p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/pve-deldisk.png" alt="pve-deldisk" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">pve-deldisk</span></div></div><h3 id="Step-2-安装OpenWrt"><a href="#Step-2-安装OpenWrt" class="headerlink" title="Step.2 安装OpenWrt"></a>Step.2 安装OpenWrt</h3><p>选取适合自己的OpenWrt镜像，这里推荐一个</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="FW867&nbsp;大神&nbsp;KoolShare&nbsp;LEDE&nbsp;软路由固件" href="https://www.koolcenter.com/posts/49" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">FW867&nbsp;大神&nbsp;KoolShare&nbsp;LEDE&nbsp;软路由固件</span><span class="cap link fs12">https://www.koolcenter.com/posts/49</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.4/link/8f277b4ee0ecd.svg"></div></div></a></div><p>将镜像（img格式）上传到pve中</p><blockquote><p>注：这里我合并了local和local-lvm，因此图中只显示local</p></blockquote><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/pve-uploadiso.png" alt="pve-uploadiso" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">pve-uploadiso</span></div></div><p>在pve的shell中输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qm importdisk 虚拟机id /var/lib/vz/template/iso/镜像名字.img local-lvm</span><br></pre></td></tr></table></figure><p>导入成功后显示successful</p><p>回到虚拟机<code>硬件</code>界面，选中新添加的硬盘，点击<code>编辑</code>，选择设备类型为<code>SATA</code>，点击<code>添加</code>，完成</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/pve-add-disk.png" alt="pve-add-disk" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">pve-add-disk</span></div></div><p>进入虚拟机<code>选项</code>页面，点击<code>引导顺序</code>，只选择新添加的SATA硬盘，点击<code>OK</code>保存</p><div class="tag-plugin image"><div class="image-bg"><img src="https://gcore.jsdelivr.net/gh/rickgcn/cdn-assets/img/pve-boot-order.png" alt="pve-boot-order" fancybox="true"/></div><div class="image-meta"><span class="image-caption center">pve-boot-order</span></div></div><p>启动虚拟机，进入openwrt</p><blockquote><p>若启动虚拟机时报错：failed to set iommu for container</p><p>请执行以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;options vfio_iommu_type1 allow_unsafe_interrupts=1&quot; &gt; /etc/modprobe.d/iommu_unsafe_interrupts.conf</span><br></pre></td></tr></table></figure><p>而后重启即可解决问题</p></blockquote><p>未完待续…</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;机器介绍&quot;&gt;&lt;a href=&quot;#机器介绍&quot; class=&quot;headerlink&quot; title=&quot;机器介绍&quot;&gt;&lt;/a&gt;机器介绍&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;center&quot;&gt;类别&lt;/th&gt;
&lt;th align=&quot;center</summary>
      
    
    
    
    
    <category term="openwrt" scheme="https://rickg.cn/tags/openwrt/"/>
    
    <category term="pve" scheme="https://rickg.cn/tags/pve/"/>
    
    <category term="软路由" scheme="https://rickg.cn/tags/%E8%BD%AF%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
</feed>
